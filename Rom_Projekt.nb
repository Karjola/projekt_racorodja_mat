(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    680060,      13570]
NotebookOptionsPosition[    675935,      13495]
NotebookOutlinePosition[    676434,      13513]
CellTagsIndexPosition[    676391,      13510]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\

Postelje Ameri\[SHacek]kih Bolnicah\
\>", "Title",
 CellChangeTimes->{{3.833271881883297*^9, 3.833271904403909*^9}, {
  3.833278670734807*^9, 3.8332786938584995`*^9}, {3.8332810993112955`*^9, 
  3.8332811026897807`*^9}, {3.833293438834087*^9, 
  3.833293443985027*^9}},ExpressionUUID->"7479c9cc-bcda-4a48-98d6-\
5c4321133a36"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["pridobivanje podatkov\n", "Section"]], "Chapter",
 CellChangeTimes->{{3.833281109429401*^9, 3.8332811362193584`*^9}, {
   3.833281231654996*^9, 3.833281241409264*^9}, 
   3.8332813889949365`*^9},ExpressionUUID->"7c32a07e-06d7-4dfa-b06e-\
324960a660c5"],

Cell["Podatke sem pridobil iz Wolfram data repository", "Text",
 CellChangeTimes->{{3.833281424727686*^9, 
  3.833281436939344*^9}},ExpressionUUID->"e767bf09-80e5-4d40-912d-\
5e894bd4969d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"podatki", " ", "=", " ", 
  RowBox[{
  "ResourceData", "[", "\"\<Hospital Beds Per US State\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.833278699702861*^9, 3.833278735108463*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"a95a2a95-9f20-4e4c-9237-cefe44c2a42b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Alabama", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.6, 1.5, 1.5, 1.4, 1.3, 1.2, 0.4, 1.5, 1.5, 1.5, 1.5,
            1.5, 1.5, 1.4, 1.5, 1.6, 1.5, 1.6, 1.5, 1.44056}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.4, 1.4, 1.4, 1.4, 1.4, 1.3, 1.3, 0.9, 0.9, 0.9, 0.9,
            0.8, 0.9, 0.8, 0.9, 0.8, 0.6, 0.6, 0.7, 0.772759}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.7, 0.7, 0.8, 0.8, 0.8, 0.8, 0.8, 0.9, 0.9, 0.9, 0.9,
            0.9, 0.9, 0.8, 0.8, 0.8, 0.9, 0.9, 0.9, 0.912498}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.7, 3.7, 3.7, 3.6, 3.5, 3.4, 3.4, 3.4, 3.4, 3.3, 3.3,
            3.2, 3.2, 3.1, 3.1, 3.1, 3., 3.1, 3.1, 3.125818}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Alaska", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.3, 0.4, 0.4, 0.4, 0.4, 0.3, 0.2, 0.4, 0.3, 0.3, 0.3,
            0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.4, 0.33055}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.4, 1.6, 1.6, 1.5, 1.5, 1.5, 1.4, 1.6, 1.6, 1.6, 1.6,
            1.5, 1.6, 1.5, 1.6, 1.6, 1.5, 1.5, 1.7, 1.534404}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.4, 0.3, 0.3, 0.3,
            0.3, 0.3, 0.3, 0.3, 0.3, 0.4, 0.4, 0.4, 0.360476}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2., 2.3, 2.3, 2.1, 2.2, 2.2, 2.1, 2.3, 2.3, 2.3, 2.2, 
           2.2, 2.1, 2.1, 2.1, 2.2, 2.2, 2.2, 2.5, 2.225429}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Arizona", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.2, 0.2, 0.1, 0.1, 0.2, 0.2, 0.1, 0.1, 0.1, 0.1, 0.2,
            0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.10855}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.7, 1.5, 1.5, 1.4, 1.4, 1.4, 1.4, 1.4, 1.4, 1.5, 1.5,
            1.6, 1.6, 1.6, 1.5, 1.5, 1.5, 1.3, 1.3, 1.316564}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.3, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.3, 0.4, 0.4,
            0.4, 0.3, 0.4, 0.4, 0.4, 0.4, 0.5, 0.5, 0.509219}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            2.2, 2.1, 2., 2., 1.9, 1.9, 2., 1.9, 1.9, 2., 2., 2.1, 2.1, 2.1, 
             2., 2., 2., 1.9, 2, 1.934333}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Arkansas", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.5, 0.4, 0.4, 0.4, 0.4, 0.4, 0.1, 0.4, 0.4, 0.3, 0.4,
            0.4, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.317968}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            2.8, 2.6, 2.5, 2.6, 2.5, 2.3, 2.3, 2.3, 2.3, 2.3, 2.1, 2.1, 2.1, 
             2.1, 2.1, 2.1, 2.2, 2.2, 2, 2.166305}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.6, 0.7, 0.6, 0.7, 0.7, 0.8, 0.7, 0.7, 0.7, 0.7, 0.8,
            0.8, 0.8, 0.8, 0.8, 0.7, 0.7, 0.6, 0.8, 0.677801}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.9, 3.7, 3.5, 3.7, 3.6, 3.5, 3.4, 3.3, 3.4, 3.4, 3.3,
            3.2, 3.2, 3.2, 3.2, 3.1, 3.2, 3.2, 3.2, 3.162075}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"California", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.2, 0.4, 0.4, 0.4, 0.4,
            0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.315167}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.4, 1.4, 1.4, 1.3, 1.3, 1.3, 1.2, 1.2, 1.2, 1.2, 1.2,
            1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.200687}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.4, 0.4, 0.4, 0.4, 0.4, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3,
            0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.321655}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.2, 2.1, 2.1, 2.1, 2.1, 2., 1.9, 1.9, 1.9, 1.9, 1.9, 
           1.9, 1.9, 1.9, 1.8, 1.8, 1.8, 1.8, 1.9, 1.837508}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Colorado", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.5, 0.5, 0.5, 0.5, 0.5, 0.4, 0.2, 0.4, 0.4, 0.5, 0.4,
            0.4, 0.4, 0.3, 0.3, 0.4, 0.3, 0.4, 0.4, 0.373202}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.4, 1.3, 1.3, 1.3, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
            1.2, 1.1, 1.2, 1.2, 1.2, 1.2, 1.2, 1.1, 1.086925}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4,
            0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.397801}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.3, 2.2, 2.1, 2.1, 2.1, 2., 2.1, 2., 2., 2., 2.1, 2.,
            2., 2., 2., 2., 1.9, 1.9, 1.9, 1.857928}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Connecticut", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            0.1, 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.1, 0.1,
              0.1, 0, 0.05, 0.059358}}, {
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            2.3, 2.2, 2.3, 2.2, 2., 2.2, 2.2, 2.2, 2.1, 2.2, 2.2, 2.2, 2.1, 
             2.2, 2.1, 2.1, 2., 2, 1.9, 1.95491}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0}}, {{{
           3155673600, 3250368000, 3281904000, 3313526400, 3345062400, 
           3376598400, 3408134400, 3439756800, 3471292800, 3502828800, 
           3534364800, 3565987200, 3597523200, 3629059200, 3660595200}}}, 1, {
           "Continuous", 1}, {"Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            2.4, 2.3, 2.3, 2.2, 2.1, 2.2, 2.2, 2.3, 2.1, 2.3, 2.3, 2.3, 2.2, 
             2.3, 2.2, 2.2, 2.1, 2, 2, 2.014268}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Delaware", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{}, {}, 0, {"Discrete", 0}, {"Discrete", 0}, 0, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, 
          False, 12.1], "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.7, 2.3, 2.3, 2.5, 2.5, 2.4, 2.3, 2.5, 2.6, 2.3, 2.4,
            2.4, 2.3, 2.1, 2.2, 2.2, 2.2, 2.1, 2.2, 2.137799}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0., 0., 0., 0., 0., 0., 0., 0., 0, 0, 0.038323}}, {
            
            TemporalData`DateSpecification[{2008, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.7, 2.3, 2.3, 2.5, 2.5, 2.4, 2.3, 2.5, 2.6, 2.4, 2.4,
            2.4, 2.4, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.176122}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {
          "DistrictOfColumbia", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.5, 0.4, 0.6, 0.6, 0.6}}, {{{3124137600, 3471292800, 
           3502828800, 3534364800, 3565987200}}}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{5., 4.7, 4.8, 4.6, 4.8, 4.6, 4.5, 4.6, 4.6, 4.5, 4.5, 
           4.3, 4.3, 4.2, 4.1, 4.4, 4.4, 4.1, 3.8, 3.52079}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.3, 1.1, 1.1, 1.3, 1.3, 1.6, 1.6, 1.5, 1.2, 1.2, 1.2,
            1., 1., 1., 1., 0.9, 1., 0.9, 0.9, 0.917971}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{6.8, 5.8, 5.9, 5.9, 6.1, 6.2, 6.1, 6.2, 5.8, 5.7, 5.8,
            5.7, 5.9, 5.7, 5.6, 5.4, 5.3, 5.1, 4.8, 4.438762}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Florida", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.5, 0.5, 0.5, 0.5, 0.5, 0.4, 0.2, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5, 0.5, 0.5, 0.4, 0.4, 0.4, 0.4, 0.413852}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.6, 1.6, 1.6, 1.5, 1.5, 1.4, 1.5, 1.4, 1.3, 1.4, 1.4,
            1.3, 1.3, 1.3, 1.3, 1.3, 1.2, 1.2, 1.3, 1.263444}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            1.2, 1.1, 1.1, 1.1, 1., 1., 1., 1., 1., 0.9, 1., 1., 1., 1., 1., 
             1., 0.9, 1, 0.9, 0.899582}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.3, 3.2, 3.2, 3.1, 3., 2.9, 2.9, 2.8, 2.8, 2.9, 2.9, 
           2.8, 2.8, 2.8, 2.7, 2.7, 2.6, 2.6, 2.6, 2.576877}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Georgia", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1., 0.9, 0.9, 0.8, 0.8, 0.8, 0.3, 0.8, 0.8, 0.8, 0.6, 
           0.6, 0.6, 0.5, 0.5, 0.4, 0.5, 0.3, 0.3, 0.28798}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.6, 1.5, 1.6, 1.6, 1.6, 1.5, 1.5, 1.4, 1.4, 1.4, 1.5,
            1.6, 1.6, 1.5, 1.6, 1.6, 1.6, 1.8, 1.8, 1.809225}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.6, 0.5, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4,
            0.4, 0.4, 0.4, 0.4, 0.4, 0.3, 0.3, 0.3, 0.292071}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.2, 2.9, 2.9, 2.9, 2.8, 2.8, 2.7, 2.7, 2.7, 2.6, 2.6,
            2.6, 2.6, 2.5, 2.5, 2.4, 2.4, 2.4, 2.4, 2.389277}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Hawaii", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.6, 0.6, 0.7, 0.5, 0.5, 0.6, 0.2, 0.5, 0.5, 0.7, 0.5,
            0.6, 0.5, 0.7, 0.6, 0.7, 0.6, 0.3, 0.3, 0.272421}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.8, 1.8, 1.9, 2., 2., 1.9, 1.8, 1.8, 1.7, 1.7, 1.8, 
           1.7, 1.4, 1.4, 1.4, 1.3, 1.3, 1.4, 1.6, 1.662686}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[TimeSeries, {{{0.1, 0.1, 0.1}}, {
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2001, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.5, 2.5, 2.6, 2.6, 2.5, 2.5, 2.4, 2.3, 2.3, 2.4, 2.3,
            2.3, 1.9, 2., 2., 2., 1.9, 1.7, 1.8, 1.935107}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Idaho", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.4, 1.3, 1.2, 1.1, 1.2, 1.1, 0.4, 0.9, 0.8, 0.7, 0.7,
            0.6, 0.6, 0.6, 0.5, 0.5, 0.5, 0.5, 0.5, 0.422156}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.1, 1., 1., 1., 1., 1., 1., 1.1, 1.2, 1.2, 1.1, 1.1, 
           1.1, 1.1, 1.2, 1.1, 1.1, 1.1, 1.1, 1.108803}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.4, 0.4, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.4,
            0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.409018}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            2.8, 2.7, 2.6, 2.5, 2.5, 2.5, 2.3, 2.3, 2.2, 2.2, 2.2, 2.1, 2.1, 
             2.1, 2.1, 2., 2., 2, 2, 1.939977}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Illinois", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.3, 0.2, 0.2, 0.2, 0.2, 0.2, 0.1, 0.2, 0.2, 0.2, 0.2,
            0.2, 0.1, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.122298}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.8, 2.7, 2.6, 2.6, 2.5, 2.4, 2.4, 2.3, 2.3, 2.3, 2.3,
            2.2, 2.2, 2.2, 2.2, 2.1, 2.1, 2.1, 2.2, 2.23413}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2, 0.2,
            0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.163876}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.1, 3., 2.9, 2.9, 2.8, 2.7, 2.7, 2.7, 2.7, 2.7, 2.6, 
           2.6, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.520303}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Indiana", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.7, 0.7, 0.7, 0.7, 0.7, 0.6, 0.2, 0.6, 0.6, 0.6, 0.5,
            0.5, 0.4, 0.4, 0.4, 0.5, 0.5, 0.4, 0.4, 0.381749}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.2, 2.2, 2.2, 2.1, 2.1, 2.1, 2., 1.9, 1.8, 1.8, 1.8, 
           1.8, 1.9, 1.9, 1.9, 1.8, 1.8, 1.8, 1.8, 1.934285}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.2, 0.2, 0.2, 0.3, 0.3, 0.3, 0.4, 0.3, 0.3, 0.4, 0.4,
            0.4, 0.3, 0.3, 0.3, 0.3, 0.4, 0.4, 0.4, 0.395639}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.2, 3.1, 3.1, 3.1, 3.1, 3., 2.8, 2.9, 2.7, 2.8, 2.7, 
           2.7, 2.7, 2.7, 2.6, 2.6, 2.6, 2.6, 2.6, 2.711673}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Iowa", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.3, 1.3, 1.2, 1.2, 1.1, 1.1, 0.3, 1., 1., 1., 1., 1.,
            1., 1., 0.9, 0.9, 0.9, 0.9, 0.9, 0.898172}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            2.8, 2.8, 2.7, 2.7, 2.6, 2.6, 2.6, 2.5, 2.5, 2.5, 2.4, 2.3, 2.3, 
             2.2, 2.2, 2.2, 2.1, 2.1, 2, 2.030732}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            0., 0., 0., 0., 0., 0.1, 0., 0.1, 0.1, 0, 0, 0.063838}}, {{{
           3187296000, 3408134400, 3439756800, 3471292800, 3502828800, 
           3534364800, 3565987200, 3597523200, 3629059200, 3660595200, 
           3692217600, 3723753600}}}, 1, {"Continuous", 1}, {"Discrete", 1}, 
           1, {ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1},
             ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            4.1, 4., 3.9, 3.8, 3.7, 3.7, 3.6, 3.5, 3.5, 3.5, 3.4, 3.3, 3.3, 
             3.2, 3.2, 3.1, 3.1, 3, 3, 2.992742}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Kansas", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.3, 1.2, 1.2, 1.2, 1.2, 1.2, 0.3, 1.2, 1.2, 1.2, 1.2,
            1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.1, 1.1, 1.096395}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.7, 2.5, 2.5, 2.4, 2.1, 2.1, 2., 2., 1.9, 1.8, 1.8, 
           1.7, 1.8, 1.7, 1.6, 1.6, 1.6, 1.6, 1.5, 1.41446}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.4, 0.3, 0.4, 0.4, 0.6, 0.5, 0.5, 0.5, 0.5, 0.6, 0.6,
            0.6, 0.5, 0.6, 0.7, 0.6, 0.6, 0.6, 0.8, 0.80684}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{4.4, 4., 4.2, 4., 3.9, 3.8, 3.7, 3.6, 3.6, 3.7, 3.6, 
           3.5, 3.5, 3.5, 3.5, 3.5, 3.4, 3.3, 3.4, 3.317695}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Kentucky", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.1, 0.4, 0.4, 0.4, 0.4,
            0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.386671}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.9, 2.8, 2.8, 2.9, 2.8, 2.8, 2.7, 2.7, 2.7, 2.5, 2.6,
            2.5, 2.4, 2.4, 2.4, 2.4, 2.4, 2.3, 2.3, 2.373602}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.4, 0.4, 0.4, 0.4, 0.4, 0.5, 0.5, 0.4, 0.4, 0.4, 0.4,
            0.4, 0.4, 0.5, 0.4, 0.4, 0.4, 0.4, 0.5, 0.451677}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.8, 3.7, 3.7, 3.7, 3.6, 3.7, 3.6, 3.5, 3.4, 3.3, 3.3,
            3.3, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.21195}}, {
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Louisiana", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.4, 1.3, 1.3, 1.2, 1.2, 1.2, 0.3, 1.1, 1.1, 1.1, 1.2,
            1.1, 1., 1., 0.9, 0.9, 0.8, 0.7, 0.7, 0.770008}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.4, 1.4, 1.5, 1.6, 1.6, 1.5, 1.4, 1.7, 1.6, 1.6, 1.5,
            1.6, 1.6, 1.6, 1.7, 1.6, 1.7, 1.8, 1.8, 1.738528}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.1, 1.1, 1.2, 1.2, 1.2, 1.2, 1., 0.9, 0.9, 0.9, 0.8, 
           0.7, 0.7, 0.7, 0.7, 0.7, 0.6, 0.5, 0.8, 0.768935}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            3.8, 3.9, 4., 4., 4., 3.8, 3.4, 3.7, 3.6, 3.6, 3.5, 3.4, 3.4, 3.3,
              3.4, 3.2, 3., 3, 3.3, 3.277471}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Maine", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0., 0.1, 0.1, 0.1, 0.1, 
           0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.055263}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.8, 2.7, 2.8, 2.7, 2.7, 2.6, 2.6, 2.5, 2.5, 2.5, 2.6,
            2.6, 2.6, 2.5, 2.5, 2.4, 2.5, 2.4, 2.4, 2.416626}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
            0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.067211}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.9, 2.9, 3., 2.9, 2.8, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 
           2.7, 2.7, 2.7, 2.6, 2.5, 2.6, 2.6, 2.5, 2.5391}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Maryland", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[TimeSeries, {{{0.}}, {
            
            TemporalData`DateSpecification[{2003, 1, 1, 0, 0, 0.}, {
             2003, 1, 1, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.2, 2., 2., 2., 2., 2., 2., 2., 2., 2.1, 2., 2., 2., 
           2., 2.1, 2., 2., 1.9, 1.9, 1.909108}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 
             0.1, 0., 0., 0., 0, 0, 0.008947}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.2, 2.1, 2.1, 2.1, 2.1, 2.1, 2., 2., 2.1, 2.1, 2.1, 
           2., 2., 2.1, 2.1, 2., 2., 1.9, 1.9, 1.918055}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Massachusetts", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0., 0.1, 0.1, 0.1, 0., 
           0., 0., 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.048819}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.3, 2.3, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.1, 2.1,
            2.2, 2.1, 2., 2., 1.9, 1.9, 1.9, 1.9, 1.838685}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.3, 0.3, 0.2, 0.2,
            0.2, 0.3, 0.4, 0.4, 0.4, 0.4, 0.4, 0.3, 0.386189}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.6, 2.6, 2.6, 2.5, 2.5, 2.5, 2.5, 2.5, 2.6, 2.4, 2.4,
            2.4, 2.4, 2.4, 2.5, 2.4, 2.3, 2.3, 2.3, 2.273693}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Michigan", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.1, 0.2, 0.2, 0.1, 0.1,
            0.1, 0.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.067107}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.4, 2.4, 2.3, 2.4, 2.4, 2.4, 2.4, 2.4, 2.3, 2.3, 2.4,
            2.4, 2.2, 2.2, 2.2, 2.1, 2.1, 2.2, 2.2, 2.171459}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0., 0., 0., 0., 0., 0., 0., 0., 0., 0.1, 0.1, 0.1, 
           0.2, 0.2, 0.3, 0.3, 0.2, 0.3, 0.3, 0.260315}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.7, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.5, 2.5, 2.6,
            2.6, 2.6, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.49888}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Minnesota", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.7, 0.7, 0.7, 0.7, 0.7, 0.6, 0.2, 0.6, 0.6, 0.5, 0.5,
            0.5, 0.5, 0.5, 0.5, 0.4, 0.4, 0.4, 0.4, 0.311795}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.7, 2.7, 2.6, 2.6, 2.6, 2.5, 2.5, 2.5, 2.5, 2.4, 2.4,
            2.4, 2.3, 2.3, 2.3, 2.3, 2.2, 2.2, 2.1, 2.166689}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0., 0., 0., 0., 0., 0.}}, {{{3313526400, 3439756800, 
           3471292800, 3502828800, 3534364800, 3692217600}}}, 1, {
           "Continuous", 1}, {"Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.4, 3.4, 3.3, 3.3, 3.2, 3.2, 3.1, 3.1, 3., 3., 3., 
           2.9, 2.8, 2.8, 2.7, 2.7, 2.6, 2.6, 2.5, 2.478484}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Mississippi", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2., 1.9, 2., 1.9, 1.9, 1.9, 0.4, 1.9, 1.8, 1.9, 1.8, 
           1.8, 1.8, 1.9, 1.9, 1.8, 1.7, 1.7, 1.7, 1.621593}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.7, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.5,
            1.5, 1.5, 1.5, 1.5, 1.4, 1.4, 1.4, 1.6, 1.623941}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.1, 1.2, 1.2, 1.1, 1., 1., 1., 1., 0.9, 1., 1., 1., 
           1., 1., 0.9, 0.9, 1., 0.9, 0.8, 0.803752}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            4.8, 4.8, 4.8, 4.6, 4.5, 4.5, 4.4, 4.5, 4.4, 4.5, 4.4, 4.4, 4.3, 
             4.3, 4.3, 4.2, 4.1, 4, 4.1, 4.049285}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Missouri", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.5, 0.6, 0.5, 0.5, 0.5, 0.5, 0.2, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5, 0.5, 0.5, 0.4, 0.4, 0.4, 0.4, 0.431748}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.8, 2.7, 2.5, 2.4, 2.5, 2.3, 2.3, 2.2, 2.2, 2.2, 2.2,
            2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.218529}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.4, 0.3, 0.3, 0.4, 0.4, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
            0.4, 0.4, 0.5, 0.5, 0.5, 0.4, 0.4, 0.4, 0.412472}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            3.7, 3.6, 3.4, 3.3, 3.4, 3.3, 3.3, 3.2, 3.1, 3.2, 3.2, 3.1, 3.1, 
             3.2, 3.1, 3.1, 3.1, 3, 3.1, 3.06275}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Montana", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.8, 0.5, 0.5, 0.5, 0.5, 0.4, 0.1, 0.4, 0.4, 0.3, 0.3,
            0.3, 0.4, 0.4, 0.4, 0.3, 0.3, 0.2, 0.2, 0.148963}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            4.5, 4.2, 4.4, 4.2, 4.2, 4.3, 4.2, 4., 3.8, 3.5, 3.6, 3.4, 3.2, 
             3.3, 3.3, 3.2, 3.1, 3, 3.1, 2.965121}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0., 0., 0., 0., 0., 0., 0., 0., 0., 0.2, 0.3, 0.2, 
           0.22533}}, {
            
            TemporalData`DateSpecification[{2006, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{5.3, 4.7, 4.9, 4.7, 4.7, 4.7, 4.6, 4.3, 4.2, 3.9, 3.9,
            3.7, 3.6, 3.7, 3.7, 3.6, 3.7, 3.5, 3.5, 3.339414}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Nebraska", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.3, 1.3, 1.2, 1.2, 1., 1., 0.3, 1., 1., 0.9, 1., 0.9,
            0.8, 0.8, 0.7, 0.7, 0.6, 0.6, 0.6, 0.475173}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            3.5, 3.3, 3.5, 3.4, 3.1, 3., 3., 3., 3., 3., 3., 2.8, 2.6, 2.9, 
             2.9, 2.8, 2.8, 2.8, 3, 2.947112}}, {
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
            0.2, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.130867}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{5., 4.8, 4.8, 4.7, 4.3, 4.2, 4.3, 4.2, 4.2, 4.1, 4.1, 
           4., 3.6, 3.8, 3.6, 3.6, 3.5, 3.4, 3.6, 3.553152}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Nevada", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.5, 0.4, 0.4, 0.4, 0.4, 0.3, 0.2, 0.3, 0.3, 0.3, 0.3,
            0.3, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.211407}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.5, 0.5, 0.5, 0.7, 0.6, 0.7, 0.6, 0.6, 0.7, 0.7, 0.7,
            0.7, 0.7, 0.6, 0.6, 0.6, 0.6, 0.6, 0.7, 0.662628}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1., 0.9, 1., 1.1, 0.8, 1., 1., 1., 1., 1., 1., 1., 
           1.1, 1.2, 1.2, 1.2, 1.1, 1.1, 1.2, 1.270752}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2., 1.9, 2., 2.1, 1.9, 2., 1.9, 1.9, 2., 2., 1.9, 1.9,
            2., 2., 2., 2., 1.9, 1.9, 2.1, 2.144786}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"NewHampshire", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{}, {}, 0, {"Discrete", 0}, {"Discrete", 0}, 0, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, 
          False, 12.1], "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.2, 2., 2., 1.9, 1.9, 1.9, 1.9, 1.9, 1.9, 1.9, 1.9, 
           1.9, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.737023}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3,
            0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.319181}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.5, 2.3, 2.3, 2.3, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2, 2.2,
            2.2, 2.2, 2.1, 2.1, 2.1, 2.1, 2.1, 2.1, 2.056204}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"NewJersey", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0., 0.1, 0.1, 0.1, 0.1, 
           0.1, 0.1, 0.1, 0.1, 0., 0.1, 0.1}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            2.9, 2.9, 2.8, 2.7, 2.5, 2.4, 2.4, 2.4, 2.3, 2.1, 2.2, 2.2, 2.1, 
             2.1, 2.1, 2., 2., 2, 2.2, 2.087323}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
            0.1, 0.2, 0.2, 0.2, 0.3, 0.3, 0.2, 0.3, 0.264798}}, {
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3., 3., 2.9, 2.8, 2.6, 2.5, 2.5, 2.5, 2.5, 2.4, 2.4, 
           2.4, 2.3, 2.4, 2.4, 2.3, 2.3, 2.3, 2.4, 2.35212}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"NewMexico", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.4, 0.4, 0.5, 0.4, 0.4, 0.4, 0.2, 0.3, 0.4, 0.4, 0.4,
            0.4, 0.4, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.345002}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.2, 1.1, 1.1, 1.1, 1., 0.9, 0.7, 0.8, 0.8, 0.8, 0.7, 
           0.8, 0.8, 0.8, 0.7, 0.7, 0.7, 0.7, 0.7, 0.749734}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.3, 0.4, 0.4, 0.5, 0.6, 0.6, 0.8, 0.7, 0.7, 0.8, 0.8,
            0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.72632}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.9, 1.9, 2., 1.9, 2., 1.9, 1.8, 1.8, 1.9, 2., 2., 
           1.9, 2., 2., 1.8, 1.8, 1.9, 1.8, 1.8, 1.821057}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"NewYork", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.6, 0.5, 0.5, 0.5, 0.5, 0.5, 0.2, 0.5, 0.6, 0.5, 0.5,
            0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.455189}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.1, 2.8, 2.9, 2.9, 2.8, 2.8, 2.7, 2.8, 2.6, 2.6, 2.6,
            2.5, 2.4, 2.4, 2.4, 2.3, 2.2, 2.2, 2.1, 2.203596}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.1, 0.2, 0.1, 0., 0., 0., 0., 0., 0., 0.}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2008, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.8, 3.5, 3.5, 3.4, 3.4, 3.3, 3.3, 3.3, 3.2, 3.1, 3.1,
            3.1, 3., 2.9, 2.9, 2.8, 2.7, 2.7, 2.6, 2.658785}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"NorthCarolina", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.8, 0.8, 0.8, 0.8, 0.7, 0.8, 0.3, 0.7, 0.7, 0.7, 0.7,
            0.7, 0.7, 0.7, 0.7, 0.6, 0.6, 0.6, 0.6, 0.620038}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.1, 1.9, 2., 2., 1.9, 1.9, 1.8, 1.8, 1.7, 1.7, 1.6, 
           1.6, 1.6, 1.5, 1.5, 1.4, 1.4, 1.3, 1.3, 1.317907}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
            0.1, 0.1, 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.137744}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.1, 2.9, 2.9, 2.8, 2.8, 2.8, 2.7, 2.6, 2.6, 2.5, 2.4,
            2.4, 2.4, 2.3, 2.3, 2.2, 2.2, 2.1, 2.1, 2.075689}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"NorthDakota", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{}, {}, 0, {"Discrete", 0}, {"Discrete", 0}, 0, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, 
          False, 12.1], "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{5.6, 5.5, 5.5, 5.8, 5.7, 5.6, 5.5, 5.6, 5.4, 5.2, 5.1,
            4.9, 4.5, 4.5, 3.9, 4.2, 4.1, 4.2, 4.1, 4.172383}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.6, 0.6, 0.3, 0.3, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
            0.1, 0.1, 0.1, 0.2, 0.094977}}, {{{3124137600, 3155673600, 
           3187296000, 3218832000, 3376598400, 3408134400, 3439756800, 
           3471292800, 3502828800, 3534364800, 3565987200, 3597523200, 
           3629059200, 3660595200, 3692217600, 3723753600}}}, 1, {
           "Continuous", 1}, {"Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{6.1, 6., 5.8, 6.1, 5.7, 5.6, 5.5, 5.6, 5.5, 5.4, 5.2, 
           5., 4.6, 4.6, 4., 4.3, 4.2, 4.3, 4.3, 4.26736}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Ohio", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.1, 0.3, 0.3, 0.3, 0.3,
            0.3, 0.3, 0.3, 0.2, 0.2, 0.2, 0.2, 0.2, 0.253504}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.7, 2.6, 2.6, 2.6, 2.5, 2.6, 2.5, 2.5, 2.5, 2.6, 2.5,
            2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.4, 2.4, 2.372147}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.1, 0.1, 0.1, 0.1, 0., 0., 0.1, 0.1, 0., 0.1, 0.1, 
           0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.214023}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3., 3., 2.9, 3., 2.9, 2.9, 2.9, 2.9, 2.9, 2.9, 3., 3.,
            2.9, 2.9, 2.9, 2.9, 2.9, 2.9, 2.9, 2.839674}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Oklahoma", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.9, 0.8, 0.8, 0.8, 0.8, 0.7, 0.2, 0.6, 0.6, 0.6, 0.7,
            0.7, 0.7, 0.7, 0.7, 0.6, 0.6, 0.6, 0.6, 0.542607}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.9, 2., 2., 1.8, 1.8, 1.7, 1.6, 1.5, 1.5, 1.5, 1.3, 
           1.3, 1.3, 1.3, 1.3, 1.3, 1.3, 1.3, 1.5, 1.485952}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.5, 0.5, 0.5, 0.5, 0.5, 0.6, 0.8, 0.9, 0.9, 0.9, 1., 
           0.9, 1., 1., 1., 1., 1., 0.9, 0.8, 0.799698}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.3, 3.2, 3.2, 3.2, 3.1, 3.1, 3.1, 3., 3., 3., 3.1, 
           3., 3., 3., 3., 2.9, 2.8, 2.8, 2.9, 2.828258}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Oregon", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.1, 0.3, 0.3, 0.3, 0.3,
            0.3, 0.3, 0.2, 0.3, 0.2, 0.2, 0.2, 0.2, 0.218323}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.6, 1.5, 1.6, 1.6, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.4,
            1.4, 1.4, 1.4, 1.4, 1.4, 1.4, 1.4, 1.4, 1.37163}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 
             0.1, 0.1, 0.1, 0.1, 0, 0.1, 0.05739}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2., 1.9, 1.9, 1.9, 1.9, 1.8, 1.8, 1.8, 1.8, 1.8, 1.7, 
           1.7, 1.8, 1.7, 1.7, 1.7, 1.7, 1.6, 1.7, 1.647343}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Pennsylvania", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 
             0., 0, 0, 0.002578}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.5, 3.3, 3.3, 3.1, 3.1, 2.9, 2.9, 2.9, 2.9, 2.9, 2.8,
            2.8, 2.7, 2.6, 2.6, 2.5, 2.4, 2.5, 2.5, 2.521303}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.1, 0.1, 0.1, 0.2, 0.2, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3,
            0.4, 0.4, 0.4, 0.4, 0.5, 0.5, 0.4, 0.4, 0.345444}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.6, 3.4, 3.4, 3.3, 3.3, 3.2, 3.2, 3.2, 3.2, 3.2, 3.1,
            3.1, 3.1, 3.1, 3.1, 3., 2.9, 2.9, 2.9, 2.869325}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"RhodeIsland", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{}, {}, 0, {"Discrete", 0}, {"Discrete", 0}, 0, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, 
          False, 12.1], "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            2.4, 2.3, 2.3, 2.3, 2.2, 2.2, 2.2, 2.3, 2.3, 2.3, 2.4, 2.4, 2.3, 
             2.3, 2., 2., 2., 2, 1.5, 1.868113}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[TimeSeries, {{{0.1, 0.1, 0.1, 0.1, 0.5, 0.198434}}, {
            
            TemporalData`DateSpecification[{2013, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            2.4, 2.3, 2.3, 2.3, 2.2, 2.2, 2.2, 2.3, 2.3, 2.3, 2.4, 2.4, 2.3, 
             2.3, 2.1, 2.1, 2.2, 2.1, 2, 2.066547}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"SouthCarolina", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.1, 0.9, 0.9, 0.8, 0.8, 0.8, 0.3, 0.8, 0.8, 0.8, 0.7,
            0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.6, 0.6, 0.585151}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.1, 1.3, 1.2, 1.3, 1.3, 1.3, 1.2, 1.2, 1.2, 1.3, 1.3,
            1.3, 1.2, 1.2, 1.3, 1.1, 1.1, 1.1, 1.3, 1.083759}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.8, 0.7, 0.7, 0.7, 0.6, 0.6, 0.7, 0.8, 0.8, 0.7, 0.8,
            0.8, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.714966}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3., 2.9, 2.8, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.8, 2.7, 
           2.7, 2.6, 2.7, 2.7, 2.5, 2.5, 2.5, 2.6, 2.383876}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"SouthDakota", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.5, 0.4, 0.4, 0.4, 0.4, 0.4, 0.1, 0.3, 0.3, 0.3, 0.2,
            0.3, 0.3, 0.3, 0.3, 0.2, 0.2, 0.2, 0.2, 0.232162}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{5.5, 5.3, 5.4, 5.6, 5.3, 5.5, 5.1, 5.1, 4.9, 4.6, 4.7,
            4.6, 4.5, 4.6, 4.5, 4.4, 4.3, 4.3, 4.3, 4.292715}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2, 0.2,
            0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.235576}}, {
            
            TemporalData`DateSpecification[{2001, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{5.9, 5.7, 5.9, 6.1, 5.8, 6., 5.6, 5.5, 5.3, 5.1, 5.1, 
           5., 5., 5., 4.9, 4.8, 4.7, 4.7, 4.8, 4.760452}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Tennessee", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.8, 0.7, 0.7, 0.6, 0.6, 0.6, 0.2, 0.6, 0.6, 0.7, 0.7,
            0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.513613}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2., 2., 2.1, 2.1, 2., 2., 1.9, 1.9, 2., 1.7, 1.6, 1.7,
            1.6, 1.5, 1.6, 1.6, 1.6, 1.5, 1.6, 1.561367}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.9, 0.8, 0.8, 0.8, 0.8, 0.8, 0.9, 0.9, 0.9, 1., 1., 
           1., 1.1, 1.1, 1.1, 1., 1., 0.9, 0.9, 0.787993}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            3.8, 3.6, 3.6, 3.5, 3.5, 3.5, 3.5, 3.3, 3.5, 3.4, 3.3, 3.3, 3.1, 
             3.1, 3.1, 3.1, 3., 2.9, 3, 2.862973}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Texas", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.2, 0.4, 0.4, 0.4, 0.4,
            0.4, 0.4, 0.3, 0.3, 0.3, 0.4, 0.4, 0.3, 0.330298}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            1.4, 1.3, 1.3, 1.3, 1.3, 1.2, 1.2, 1.2, 1.1, 1.2, 1.2, 1.1, 1.1, 
             1.1, 1.1, 1., 1., 1, 1, 0.956244}}, {
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            1., 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1., 0.9, 0.9, 
             0.9, 0.9, 0.9, 0.9, 0.9, 1, 1.007347}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.8, 2.7, 2.6, 2.6, 2.6, 2.6, 2.5, 2.5, 2.4, 2.5, 2.5,
            2.4, 2.4, 2.4, 2.3, 2.3, 2.3, 2.2, 2.4, 2.29389}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> Entity["Country", "UnitedStates"], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.5, 0.5, 0.5, 0.5, 0.4, 0.4, 0.2, 0.4, 0.4, 0.4, 0.4,
            0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.3, 0.3, 0.336845}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.2, 2.1, 2.1, 2., 2., 1.9, 1.9, 1.9, 1.8, 1.8, 1.8, 
           1.8, 1.8, 1.7, 1.7, 1.7, 1.7, 1.7, 1.7, 1.661634}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4,
            0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.427133}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3., 2.9, 2.9, 2.8, 2.8, 2.8, 2.7, 2.7, 2.7, 2.7, 2.6, 
           2.6, 2.6, 2.6, 2.5, 2.5, 2.4, 2.4, 2.5, 2.425612}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Utah", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.3, 0.3, 0.3, 0.2, 0.2, 0.2, 0.1, 0.2, 0.2, 0.3, 0.3,
            0.2, 0.2, 0.2, 0.2, 0.2, 0.3, 0.3, 0.3, 0.262878}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            1., 1.1, 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 
             1., 0.9, 1, 0.973189}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.5, 0.6, 0.6,
            0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.592665}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2., 1.9, 1.9, 1.9, 1.9, 1.9, 1.8, 1.8, 1.7, 1.8, 1.8, 
           1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.9, 1.828733}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Vermont", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{}, {}, 0, {"Discrete", 0}, {"Discrete", 0}, 0, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, 
          False, 12.1], "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            2.8, 2.7, 2.8, 2.6, 2.4, 2.4, 2.2, 2.1, 2.2, 2.1, 2.1, 2.1, 1.9, 
             2., 1.9, 1.9, 1.9, 2, 2, 2.090147}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{}, {}, 0, {"Discrete", 0}, {"Discrete", 0}, 0, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, 
          False, 12.1], "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            2.8, 2.7, 2.8, 2.6, 2.4, 2.4, 2.2, 2.1, 2.2, 2.1, 2.1, 2.1, 1.9, 
             2., 1.9, 1.9, 1.9, 2, 2, 2.090147}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Virginia", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.3, 0.3, 0.3, 0.3, 0.2, 0.2, 0.1, 0.2, 0.2, 0.2, 0.2,
            0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.205145}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.8, 1.6, 1.6, 1.7, 1.6, 1.6, 1.6, 1.5, 1.5, 1.5, 1.6,
            1.5, 1.6, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.456133}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.5, 0.5, 0.5, 0.4, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.4, 0.5, 0.5, 0.4, 0.4, 0.4, 0.4, 0.463695}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.5, 2.4, 2.3, 2.4, 2.3, 2.3, 2.3, 2.3, 2.2, 2.3, 2.2,
            2.2, 2.2, 2.2, 2.2, 2.2, 2.1, 2.1, 2.2, 2.124973}}, {
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Washington", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.3, 0.4, 0.4, 0.4, 0.4,
            0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.383181}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.4, 1.3, 1.3, 1.3, 1.3, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
            1.2, 1.2, 1.2, 1.2, 1.1, 1.1, 1.1, 1.2, 1.191541}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.1, 0.1, 0., 0., 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 
           0.1, 0.1, 0.1, 0.1, 0.2, 0.2, 0.1, 0.1, 0.123075}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.9, 1.9, 1.9, 1.9, 1.8, 1.8, 1.7, 1.7, 1.7, 1.7, 1.7,
            1.7, 1.7, 1.8, 1.8, 1.7, 1.7, 1.7, 1.7, 1.697797}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"WestVirginia", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.4, 0.4, 0.4, 0.4, 0.4, 0.3, 0.1, 0.3, 0.3, 0.3, 0.3,
            0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.4, 0.358035}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.3, 3.3, 3.3, 3.3, 3.2, 3., 3., 3., 3., 3.1, 3., 3., 
           3., 2.9, 2.8, 2.7, 2.7, 2.8, 2.8, 2.762304}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.8, 0.7, 0.7, 0.7, 0.8, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7,
            0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.6, 0.7, 0.686142}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{4.5, 4.4, 4.4, 4.3, 4.3, 4.1, 4., 4., 4.1, 4.1, 4.1, 
           3.9, 4., 3.9, 3.8, 3.7, 3.7, 3.7, 3.8, 3.806481}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Wisconsin", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 
             0., 0, 0, 0.00861}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            3., 2.8, 2.8, 2.6, 2.7, 2.5, 2.6, 2.5, 2.4, 2.4, 2.3, 2.3, 2.2, 
             2.2, 2.1, 2.1, 2.1, 2, 2, 1.989356}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0., 0., 0., 0., 0., 0.1, 0., 0., 0.1, 0.1, 0.1, 0.1, 
           0., 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.086097}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3., 2.9, 2.9, 2.7, 2.7, 2.6, 2.6, 2.5, 2.5, 2.4, 2.4, 
           2.4, 2.3, 2.3, 2.2, 2.2, 2.2, 2.1, 2.1, 2.084063}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]], 
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Wyoming", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.4, 2.5, 2.5, 2.5, 2.3, 2.9, 0.7, 2.9, 2.8, 2.7, 2.6,
            2.4, 2.4, 2.4, 2.3, 2.3, 2.2, 2.3, 2.2, 2.57271}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            1., 1., 1., 0.9, 0.9, 0.8, 0.7, 0.7, 0.9, 0.8, 0.7, 0.7, 0.7, 0.7,
              0.7, 0.7, 0.7, 0.5, 1, 0.515927}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.3,
            0.3, 0.3, 0.3, 0.3, 0.2, 0.2, 0.2, 0.3, 0.39993}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.8, 3.9, 3.9, 3.8, 3.5, 4., 4., 4., 4., 3.9, 3.7, 
           3.5, 3.5, 3.3, 3.3, 3.1, 3.1, 2.9, 3.6, 3.488567}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]]}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Location"} -> 
        1, {All, "StateOrLocalGovernmentBedsPer1000Inhabitants"} -> 
        1, {All, "NonProfitBedsPer1000Inhabitants"} -> 
        1, {All, "ForProfitBedsPer1000Inhabitants"} -> 
        1, {All, "TotalBedsPer1000Inhabitants"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Location" -> TypeSystem`PackageScope`AtomShape[60], 
            "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "NonProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "ForProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "TotalBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160]]], 
          DirectedInfinity[1], 5, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Location", "StateOrLocalGovernmentBedsPer1000Inhabitants", 
         "NonProfitBedsPer1000Inhabitants", "ForProfitBedsPer1000Inhabitants",
          "TotalBedsPer1000Inhabitants"}, {
         TypeSystem`Atom[Entity], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData]}], 52], "Meta" -> 
     Association["ID" -> 146153638970696], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Location"} -> 
        1, {All, "StateOrLocalGovernmentBedsPer1000Inhabitants"} -> 
        1, {All, "NonProfitBedsPer1000Inhabitants"} -> 
        1, {All, "ForProfitBedsPer1000Inhabitants"} -> 
        1, {All, "TotalBedsPer1000Inhabitants"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Location" -> TypeSystem`PackageScope`AtomShape[60], 
            "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "NonProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "ForProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "TotalBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160]]], 
          DirectedInfinity[1], 5, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Location", "StateOrLocalGovernmentBedsPer1000Inhabitants", 
         "NonProfitBedsPer1000Inhabitants", "ForProfitBedsPer1000Inhabitants",
          "TotalBedsPer1000Inhabitants"}, {
         TypeSystem`Atom[Entity], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData]}], 52], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
     5, "DataRowCount" -> 52, "DataColumnCount" -> 5, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Location", 
                  Style[
                  "Location", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Location"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Location"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StateOrLocalGovernmentBedsPer1000Inhabitants", 
                  Style[
                  "StateOrLocalGovernmentBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "StateOrLocalGovernmentBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "StateOrLocalGovernmentBedsPer1000Inhabitants"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["NonProfitBedsPer1000Inhabitants", 
                  Style[
                  "NonProfitBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "NonProfitBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "NonProfitBedsPer1000Inhabitants"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ForProfitBedsPer1000Inhabitants", 
                  Style[
                  "ForProfitBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ForProfitBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ForProfitBedsPer1000Inhabitants"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TotalBedsPer1000Inhabitants", 
                  Style[
                  "TotalBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TotalBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TotalBedsPer1000Inhabitants"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Alabama, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Alaska, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Arizona, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Arkansas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"California, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Colorado, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"Connecticut, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2000\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["15", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Delaware, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}]}, "RowDefault"], 
                    "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2008\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["11", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"District of Columbia, United States\"", FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2013\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["5", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Florida, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Georgia, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Hawaii, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2001\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Idaho, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Illinois, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Indiana, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Iowa, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2001\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Kansas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Kentucky, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"Louisiana, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Maine, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 52, 1], {1, 52 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 52, 1], {1, 52 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    52, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    52, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 52, 1], {1, 52 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 52, 1], {1, 52 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1346., {537., 543.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1346., {537., 543.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.833278745909849*^9, {3.833287185024706*^9, 3.83328719329337*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"ab5c041d-e96f-40ec-bcbb-e13a1ee127c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Alabama", "Section",
 CellChangeTimes->{{3.8332805162943554`*^9, 3.833280517207506*^9}, 
   3.8332805568108115`*^9, {3.833281347911163*^9, 
   3.833281368091716*^9}},ExpressionUUID->"534ff094-e7fe-4a6f-839b-\
cf95f94c3ae2"],

Cell["Najprej si bomo pogledali, kaj se dogaja v Alabami.", "Text",
 CellChangeTimes->{{3.8332814840138197`*^9, 
  3.833281538483455*^9}},ExpressionUUID->"21196fdc-b8eb-4fe5-9870-\
f99307af45ed"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.833279095750065*^9, 
  3.833279098033925*^9}},ExpressionUUID->"b47a1afc-83a8-404f-b23f-\
332862ba06d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Alabama", " ", "=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{"podatki", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<Location\>\"", "]"}], "==", " ", 
       NamespaceBox["LinguisticAssistant",
        DynamicModuleBox[{Typeset`query$$ = "Alabama, United States", 
         Typeset`boxes$$ = TemplateBox[{"\"Alabama, United States\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"AdministrativeDivision\"", ",", 
               RowBox[{"{", 
                 RowBox[{"\"Alabama\"", ",", "\"UnitedStates\""}], "}"}]}], 
             "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Alabama\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, 
          "Entity"], 
         Typeset`allassumptions$$ = {{
          "type" -> "Clash", "word" -> "Alabama, United States", "template" -> 
           "Assuming \"Alabama, United States\" is a US state${separator}Use \
as ${desc} or ${desc} instead", "count" -> "3", "pulldown" -> "false", 
           "default" -> 
           "{\"C\", \"Alabama, United States\"} -> {\"USState\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "USState", "desc" -> "a US state", "input" -> 
              "{\"C\", \"Alabama, United States\"} -> {\"USState\"}"}, {
             "name" -> "City", "desc" -> "a city", "input" -> 
              "{\"C\", \"Alabama, United States\"} -> {\"City\"}"}, {
             "name" -> "River", "desc" -> "a river", "input" -> 
              "{\"C\", \"Alabama, United States\"} -> {\"River\"}"}}}}, 
         Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
         Typeset`querystate$$ = {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          1.5995741`7.655549357000628, "Messages" -> {}}}, 
         DynamicBox[ToBoxes[
           AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
            Dynamic[Typeset`query$$], 
            Dynamic[Typeset`boxes$$], 
            Dynamic[Typeset`allassumptions$$], 
            Dynamic[Typeset`assumptions$$], 
            Dynamic[Typeset`open$$], 
            Dynamic[Typeset`querystate$$]], StandardForm],
          ImageSizeCache->{333., {7., 17.}},
          
          TrackedSymbols:>{
           Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
            Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
         DynamicModuleValues:>{},
         UndoTrackedVariables:>{Typeset`open$$}],
        BaseStyle->{"Deploy"},
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True]}], "&"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8332792262199945`*^9, 3.8332793082490454`*^9}, {
  3.8332793382562265`*^9, 3.833279418399482*^9}, {3.833282164240362*^9, 
  3.8332821717400613`*^9}, {3.8332829567862396`*^9, 3.8332829653574324`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"ac35d277-e767-4ea6-b079-a15cd395b9bd"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Alabama", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.6, 1.5, 1.5, 1.4, 1.3, 1.2, 0.4, 1.5, 1.5, 1.5, 1.5,
            1.5, 1.5, 1.4, 1.5, 1.6, 1.5, 1.6, 1.5, 1.44056}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.4, 1.4, 1.4, 1.4, 1.4, 1.3, 1.3, 0.9, 0.9, 0.9, 0.9,
            0.8, 0.9, 0.8, 0.9, 0.8, 0.6, 0.6, 0.7, 0.772759}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.7, 0.7, 0.8, 0.8, 0.8, 0.8, 0.8, 0.9, 0.9, 0.9, 0.9,
            0.9, 0.9, 0.8, 0.8, 0.8, 0.9, 0.9, 0.9, 0.912498}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.7, 3.7, 3.7, 3.6, 3.5, 3.4, 3.4, 3.4, 3.4, 3.3, 3.3,
            3.2, 3.2, 3.1, 3.1, 3.1, 3., 3.1, 3.1, 3.125818}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]]}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Location"} -> 
        1, {All, "StateOrLocalGovernmentBedsPer1000Inhabitants"} -> 
        1, {All, "NonProfitBedsPer1000Inhabitants"} -> 
        1, {All, "ForProfitBedsPer1000Inhabitants"} -> 
        1, {All, "TotalBedsPer1000Inhabitants"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Location" -> TypeSystem`PackageScope`AtomShape[150], 
            "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "NonProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "ForProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "TotalBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160]]], 
          DirectedInfinity[1], 5, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Location", "StateOrLocalGovernmentBedsPer1000Inhabitants", 
         "NonProfitBedsPer1000Inhabitants", "ForProfitBedsPer1000Inhabitants",
          "TotalBedsPer1000Inhabitants"}, {
         TypeSystem`Atom[
          Entity["AdministrativeDivision"]], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData]}], 1], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Location"} -> 
        1, {All, "StateOrLocalGovernmentBedsPer1000Inhabitants"} -> 
        1, {All, "NonProfitBedsPer1000Inhabitants"} -> 
        1, {All, "ForProfitBedsPer1000Inhabitants"} -> 
        1, {All, "TotalBedsPer1000Inhabitants"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Location" -> TypeSystem`PackageScope`AtomShape[150], 
            "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "NonProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "ForProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "TotalBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160]]], 
          DirectedInfinity[1], 5, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Location", "StateOrLocalGovernmentBedsPer1000Inhabitants", 
         "NonProfitBedsPer1000Inhabitants", "ForProfitBedsPer1000Inhabitants",
          "TotalBedsPer1000Inhabitants"}, {
         TypeSystem`Atom[
          Entity["AdministrativeDivision"]], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData]}], 1], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 
     5, "DataRowCount" -> 1, "DataColumnCount" -> 5, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Location", 
                  Style[
                  "Location", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Location"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Location"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StateOrLocalGovernmentBedsPer1000Inhabitants", 
                  Style[
                  "StateOrLocalGovernmentBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "StateOrLocalGovernmentBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "StateOrLocalGovernmentBedsPer1000Inhabitants"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["NonProfitBedsPer1000Inhabitants", 
                  Style[
                  "NonProfitBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "NonProfitBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "NonProfitBedsPer1000Inhabitants"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ForProfitBedsPer1000Inhabitants", 
                  Style[
                  "ForProfitBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ForProfitBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ForProfitBedsPer1000Inhabitants"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TotalBedsPer1000Inhabitants", 
                  Style[
                  "TotalBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TotalBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TotalBedsPer1000Inhabitants"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Alabama, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1264., {52., 58.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1264., {52., 58.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.833282968147888*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"3f91f358-586a-48c5-847f-53b8136a0c88"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.833282194488063*^9, 
  3.833282195251965*^9}},ExpressionUUID->"3413b156-c8f7-4128-8a50-\
dc35b8489edb"],

Cell[BoxData[
 RowBox[{"NeprofitnePosteljeAlabama", " ", "=", " ", 
  RowBox[{
   RowBox[{"%", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   "\"\<NonProfitBedsPer1000Inhabitants\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8332822037836304`*^9, 3.83328226742889*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"30a301f1-99ec-49b2-a903-8d7270a3b977"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJxNyw1MzHEYB/C/jF6kNGW96DiUsJiQ0eXxHL2b7U6Rl+qKrnnpqITqOPTi
LS9TqNW8rHSp1npZUaaihDhKkUpe6nT/+/2P01TUGLLx892+e/bZvg8/bLc4
3IBhGMHvjl6npR4tLZ4alP7JEARWLyvYt5HaLvrISFEk9bkqZ2nq4f/20b0T
JqZRl4fonKYpqetebwztrKIOPWNrMfsptX+pesSyh3p462SmaIDaxe+CvM2I
/Wf7ewmWeXbUmwp29lnPp573oHiBvZDFS0nV8nLeEBTHrE9v8mcx2vnj98Qr
g9DgL9pjvJ3Fg/2ZyjyrQXBWBqRo5SyqnoxmALxP1NyMPks9dCVecjqHer1n
1ixRJYuiL80CmxkD4Ms3l+Q1sWgbfFsh/NYP5yJTX2S/YfGNUYzcoFQPx31k
UkH/338dWG7KkUWO0/6zeERw3suaumfCO/29udTjxS8bnq2g7pq9sCJZRL3a
5e1UVTg1U3yxpiKOOrKqLMErlVo2zC/ZcZWa/2jwp2u5Flu74265PufA0aT1
RO59Lb7v/BTi3k6gVjH2VE6HFoVmgVvYRi2YJGco/XRanL7SnQ3dQYCtOeyW
zBDUzSrMbTvIwYHjKhIxmaBXoFpmrNDB5vqZbZwDwRLOgyfl6aDFRbV4zHKC
sidN0nemHAwv7CqpXUPwcnDStYyJBCrCBbnmoQSFU7ZdVy0jUG+ibGFiCZ71
bgvJ9+YgEfbZZh0j6NtxgIg8dNCen9HZmEUwpc/b5zPqoPvatMqsYoLjHHnN
+5GDJaYljy3u/t6vumNp4kmAX5gWaPOC4Jx0w3pNMwu1HV1Mk4ag2+VLnc2t
ffBZsH+66XeC5laTsg2K1LDXYmq83pzDRX/SCwWxDvqEGdQxZke7Ml2pP7mu
6pX4cJhvzMhvSHrhR9qGsKogDkfS2w/93KuG4LBYu/IoDtNSK3zXJn2AqLqv
+oAkDsuM1/nZx/eB9TqV28kMDnniXY1ioQb2xBrmRBRy2BA0J0b4QwOvHlab
KWo4tNutMIqqZuEXYPH4jg==
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$103387#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.1241376*^9, 0.6}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.1241376*^9, 0.6}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3124137600, 3723753600}, {0.6, 1.4}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJxNyw1MzHEYB/C/jF6kNGW96DiUsJiQ0eXxHL2b7U6Rl+qKrnnpqITqOPTi
LS9TqNW8rHSp1npZUaaihDhKkUpe6nT/+/2P01TUGLLx892+e/bZvg8/bLc4
3IBhGMHvjl6npR4tLZ4alP7JEARWLyvYt5HaLvrISFEk9bkqZ2nq4f/20b0T
JqZRl4fonKYpqetebwztrKIOPWNrMfsptX+pesSyh3p462SmaIDaxe+CvM2I
/Wf7ewmWeXbUmwp29lnPp573oHiBvZDFS0nV8nLeEBTHrE9v8mcx2vnj98Qr
g9DgL9pjvJ3Fg/2ZyjyrQXBWBqRo5SyqnoxmALxP1NyMPks9dCVecjqHer1n
1ixRJYuiL80CmxkD4Ms3l+Q1sWgbfFsh/NYP5yJTX2S/YfGNUYzcoFQPx31k
UkH/338dWG7KkUWO0/6zeERw3suaumfCO/29udTjxS8bnq2g7pq9sCJZRL3a
5e1UVTg1U3yxpiKOOrKqLMErlVo2zC/ZcZWa/2jwp2u5Flu74265PufA0aT1
RO59Lb7v/BTi3k6gVjH2VE6HFoVmgVvYRi2YJGco/XRanL7SnQ3dQYCtOeyW
zBDUzSrMbTvIwYHjKhIxmaBXoFpmrNDB5vqZbZwDwRLOgyfl6aDFRbV4zHKC
sidN0nemHAwv7CqpXUPwcnDStYyJBCrCBbnmoQSFU7ZdVy0jUG+ibGFiCZ71
bgvJ9+YgEfbZZh0j6NtxgIg8dNCen9HZmEUwpc/b5zPqoPvatMqsYoLjHHnN
+5GDJaYljy3u/t6vumNp4kmAX5gWaPOC4Jx0w3pNMwu1HV1Mk4ag2+VLnc2t
ffBZsH+66XeC5laTsg2K1LDXYmq83pzDRX/SCwWxDvqEGdQxZke7Ml2pP7mu
6pX4cJhvzMhvSHrhR9qGsKogDkfS2w/93KuG4LBYu/IoDtNSK3zXJn2AqLqv
+oAkDsuM1/nZx/eB9TqV28kMDnniXY1ioQb2xBrmRBRy2BA0J0b4QwOvHlab
KWo4tNutMIqqZuEXYPH4jg==
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$103387#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.1241376*^9, 0.6}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.1241376*^9, 0.6}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3124137600, 3723753600}, {0.6, 1.4}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[
  TimeSeries, {{{1.4, 1.4, 1.4, 1.4, 1.4, 1.3, 1.3, 0.9, 0.9, 0.9, 0.9, 0.8, 
    0.9, 0.8, 0.9, 0.8, 0.6, 0.6, 0.7, 0.772759}}, {
     TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
      2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
    "Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, True, 12.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Input",
 CellChangeTimes->{{3.833282298017875*^9, 
  3.833282313397857*^9}},ExpressionUUID->"8b7f07c2-0e29-4dd1-8d40-\
ac7fda86ba38"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "TimeSeriesWindow", "[", "\<\"TotalBedsPer1000Inhabitants\"\>", "]"}], 
  "[", "\<\"TotalBedsPer1000Inhabitants\"\>", "]"}]], "Output",
 CellChangeTimes->{3.8332889330417767`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"18e6fe83-58b4-4ce0-99b7-719f2b5add79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"NeprofitnePosteljeAlabama", ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Neprofitne postelje na 1000 prebivalcev v Alabami\>\""}], ",", " ", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Web\>\""}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8332798402900724`*^9, 3.8332798697034197`*^9}, {
  3.8332799052671213`*^9, 3.8332799384120336`*^9}, {3.8332799728004403`*^9, 
  3.8332800282499466`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"624b7cce-7ab4-4883-8578-889897f83102"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.790588, 0.201176, 0.], PointSize[0.012833333333333334`], 
     AbsoluteThickness[3], CapForm["Butt"], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQQXLro9d0wDg2/2QL7DjyYU/gOP/Sj8gPzfKPwD
U81fIPMN9hS/cDx7BgS+gPgXeDag8B2M38D4b0D8DZEaL5H5Cg0pKPwDFxag
8A2+33npOGsmCLwE8RfISr5ClhdwCX2FLL9hykQUeYXdZ1HkJzzkfO1oDAaP
QXwGDjcU/oKIptdQ/z0Dm1+/77XjLkEx0cJdL+wBJBCReA==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.1241376*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->{{
     StrokeForm[
      Opacity[0]], 
     StrokeForm[
      Opacity[0]]}, {Automatic, None}},
  FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{{{
       0., 
        FormBox["0", TraditionalForm], {0.01, 0.}}, {0.25, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.25\"", ShowStringCharacters -> False], 0.25, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {0.5, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.50\"", ShowStringCharacters -> False], 0.5, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {0.75, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.75\"", ShowStringCharacters -> False], 0.75, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {1., 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"1.00\"", ShowStringCharacters -> False], 1., 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {1.25, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"1.25\"", ShowStringCharacters -> False], 1.25, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}}, 
      None}, {{{2.9979072*^9, 
        FormBox[
         StyleBox["\"1995\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         StyleBox["\"2000\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         StyleBox["\"2005\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         StyleBox["\"2010\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         StyleBox["\"2015\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {2.9979072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0294432*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0610656*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0926016*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1241376*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.187296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.218832*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.250368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.281904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3450624*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3765984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4397568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{2.9979072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {2.9979072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0294432*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0610656*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0926016*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1241376*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.187296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.218832*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.250368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.281904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3450624*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3765984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4397568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->Large,
  Method->{
   "NoShowPlotTheme" -> "Web", "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Neprofitne postelje na 1000 prebivalcev v Alabami\"", TraditionalForm],
  PlotRange->{{3.1241376*^9, 3.7237536*^9}, {0, 1.4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Charting`FindScaledTicks[
     (Charting`SimpleTicks[#, #2, 6]& )[
      SlotSequence[1]], {Identity, Identity}]& }]], "Output",
 CellChangeTimes->{3.833282116768979*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"dfcfbf96-d175-4d43-b2d5-a5d2dac9d154"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"Differences", "[", "NeprofitnePosteljeAlabama", "]"}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Razlike v \[SHacek]tevilu neprofitnih postelj v Alabami na 1000 \
prebivalcev med leti\>\""}], ",", " ", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Web\>\""}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.833282484570699*^9, 3.8332825048853397`*^9}, {
  3.8332825356505837`*^9, 3.8332826859045143`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"79287a14-4c99-4406-83dc-7c3053ce5858"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.790588, 0.201176, 0.], PointSize[0.012833333333333334`], 
     AbsoluteThickness[3], CapForm["Butt"], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQQOP5qeOzIgwAOP/Sj8gPzfKPwDU81fIPMN9hS/
cJwwEwR27gfyL/BsQJF3MH7zwnEWWP4mSH5DpMZLZHmFhhQU/oELC1D4Bt/v
vHScgTB/gazkKxjfHsgXcAl9hSy/YcpEFHmF3WdR5Cc85HztOAfMPwniM3C4
vUa2b0FE02sU8+v3vXZcEFVbGrpgkz0AfbJi+g==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.1556736*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->{{
     StrokeForm[
      Opacity[0]], 
     StrokeForm[
      Opacity[0]]}, {Automatic, None}},
  FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
       None]}}, {{{{-0.4, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"-0.4\"", ShowStringCharacters -> False], -0.4, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {-0.3, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"-0.3\"", ShowStringCharacters -> False], -0.3, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {-0.2, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"-0.2\"", ShowStringCharacters -> False], -0.2, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {-0.1, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"-0.1\"", ShowStringCharacters -> False], -0.1, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {0., 
        FormBox["0", TraditionalForm], {0.01, 0.}}, {0.1, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.1\"", ShowStringCharacters -> False], 0.1, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}}, 
      None}, {{{2.9979072*^9, 
        FormBox[
         StyleBox["\"1995\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         StyleBox["\"2000\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         StyleBox["\"2005\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         StyleBox["\"2010\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         StyleBox["\"2015\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {2.9979072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0294432*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0610656*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0926016*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1241376*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.187296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.218832*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.250368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.281904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3450624*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3765984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4397568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{2.9979072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {2.9979072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0294432*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0610656*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0926016*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1241376*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.187296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.218832*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.250368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.281904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3450624*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3765984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4397568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->Large,
  Method->{
   "NoShowPlotTheme" -> "Web", "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Razlike v \[SHacek]tevilu neprofitnih postelj v Alabami na 1000 \
prebivalcev med leti\"", TraditionalForm],
  PlotRange->{{3.1556736*^9, 3.7237536*^9}, {-0.4, 0.09999999999999998}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Charting`FindScaledTicks[
     (Charting`SimpleTicks[#, #2, 6]& )[
      SlotSequence[1]], {Identity, Identity}]& }]], "Output",
 CellChangeTimes->{
  3.8332825464039726`*^9, {3.8332826649262943`*^9, 3.833282687445464*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"82074a0f-84e0-4f03-aa58-c396bff8c841"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8332830932289724`*^9, 3.8332830978761387`*^9}, 
   3.833283461793253*^9},ExpressionUUID->"9c389246-8eef-4c00-a9b7-\
3a010b6cca09"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8332870404694233`*^9, 
  3.8332870579335375`*^9}},ExpressionUUID->"f6832e4c-ff2b-44c8-a50b-\
bd34c25e2baa"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8332870561066103`*^9, 
  3.833287056112609*^9}},ExpressionUUID->"cb9273ed-8b24-43a1-ac9d-\
b5cb396b400a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kentucky", "Section",
 CellChangeTimes->{{3.833290267746091*^9, 
  3.83329028409158*^9}},ExpressionUUID->"4bc50fa1-b340-428e-933b-\
fea4457f992c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Kentucky", " ", "=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{"podatki", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<Location\>\"", "]"}], "==", " ", 
       NamespaceBox["LinguisticAssistant",
        DynamicModuleBox[{Typeset`query$$ = "Kentucky, United States", 
         Typeset`boxes$$ = TemplateBox[{"\"Kentucky, United States\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"AdministrativeDivision\"", ",", 
               RowBox[{"{", 
                 RowBox[{"\"Kentucky\"", ",", "\"UnitedStates\""}], "}"}]}], 
             "]"}], "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Kentucky\\\
\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, "Entity"], 
         Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
         Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          1.9763688`7.747412982765772, "Messages" -> {}}}, 
         DynamicBox[ToBoxes[
           AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
            Dynamic[Typeset`query$$], 
            Dynamic[Typeset`boxes$$], 
            Dynamic[Typeset`allassumptions$$], 
            Dynamic[Typeset`assumptions$$], 
            Dynamic[Typeset`open$$], 
            Dynamic[Typeset`querystate$$]], StandardForm],
          ImageSizeCache->{310., {7., 17.}},
          
          TrackedSymbols:>{
           Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
            Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
         DynamicModuleValues:>{},
         UndoTrackedVariables:>{Typeset`open$$}],
        BaseStyle->{"Deploy"},
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True]}], "&"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"KvotaNa1000PrebivalcevKentucky", " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3.96", "*", 
      RowBox[{"10", "^", "6"}]}], ",", " ", 
     RowBox[{"3.98", "*", 
      RowBox[{"10", "^", "6"}]}], ",", " ", 
     RowBox[{"4.06", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.09", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.11", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.14", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.18", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.21", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.25", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.28", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.31", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.33", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.37", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.38", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.40", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.41", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.42", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.43", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.45", "*", 
      RowBox[{"10", "^", "6"}]}], ",", 
     RowBox[{"4.46", "*", 
      RowBox[{"10", "^", "6"}]}]}], "}"}], " ", "/", " ", 
   "1000"}]}]}], "Input",
 CellChangeTimes->{{3.833287109278858*^9, 3.83328715882621*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"1d2a217e-26f0-4a7c-8038-c559914d84da"],

Cell[CellGroupData[{

Cell[BoxData[{
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Kentucky", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.1, 0.4, 0.4, 0.4, 0.4,
            0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.386671}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{2.9, 2.8, 2.8, 2.9, 2.8, 2.8, 2.7, 2.7, 2.7, 2.5, 2.6,
            2.5, 2.4, 2.4, 2.4, 2.4, 2.4, 2.3, 2.3, 2.373602}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.4, 0.4, 0.4, 0.4, 0.4, 0.5, 0.5, 0.4, 0.4, 0.4, 0.4,
            0.4, 0.4, 0.5, 0.4, 0.4, 0.4, 0.4, 0.5, 0.451677}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.8, 3.7, 3.7, 3.7, 3.6, 3.7, 3.6, 3.5, 3.4, 3.3, 3.3,
            3.3, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.21195}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]]}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Location"} -> 
        1, {All, "StateOrLocalGovernmentBedsPer1000Inhabitants"} -> 
        1, {All, "NonProfitBedsPer1000Inhabitants"} -> 
        1, {All, "ForProfitBedsPer1000Inhabitants"} -> 
        1, {All, "TotalBedsPer1000Inhabitants"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Location" -> TypeSystem`PackageScope`AtomShape[150], 
            "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "NonProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "ForProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "TotalBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160]]], 
          DirectedInfinity[1], 5, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Location", "StateOrLocalGovernmentBedsPer1000Inhabitants", 
         "NonProfitBedsPer1000Inhabitants", "ForProfitBedsPer1000Inhabitants",
          "TotalBedsPer1000Inhabitants"}, {
         TypeSystem`Atom[
          Entity["AdministrativeDivision"]], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData]}], 1], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Location"} -> 
        1, {All, "StateOrLocalGovernmentBedsPer1000Inhabitants"} -> 
        1, {All, "NonProfitBedsPer1000Inhabitants"} -> 
        1, {All, "ForProfitBedsPer1000Inhabitants"} -> 
        1, {All, "TotalBedsPer1000Inhabitants"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Location" -> TypeSystem`PackageScope`AtomShape[150], 
            "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "NonProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "ForProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "TotalBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160]]], 
          DirectedInfinity[1], 5, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Location", "StateOrLocalGovernmentBedsPer1000Inhabitants", 
         "NonProfitBedsPer1000Inhabitants", "ForProfitBedsPer1000Inhabitants",
          "TotalBedsPer1000Inhabitants"}, {
         TypeSystem`Atom[
          Entity["AdministrativeDivision"]], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData]}], 1], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 
     5, "DataRowCount" -> 1, "DataColumnCount" -> 5, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Location", 
                  Style[
                  "Location", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Location"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Location"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StateOrLocalGovernmentBedsPer1000Inhabitants", 
                  Style[
                  "StateOrLocalGovernmentBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "StateOrLocalGovernmentBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "StateOrLocalGovernmentBedsPer1000Inhabitants"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["NonProfitBedsPer1000Inhabitants", 
                  Style[
                  "NonProfitBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "NonProfitBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "NonProfitBedsPer1000Inhabitants"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ForProfitBedsPer1000Inhabitants", 
                  Style[
                  "ForProfitBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ForProfitBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ForProfitBedsPer1000Inhabitants"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TotalBedsPer1000Inhabitants", 
                  Style[
                  "TotalBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TotalBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TotalBedsPer1000Inhabitants"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Kentucky, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1291., {51., 57.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1291., {51., 57.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False], "\[IndentingNewLine]", 
 RowBox[{"TotalBedsPer1000Kentucky", " ", "=", " ", 
  RowBox[{
   RowBox[{"%", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   "\"\<TotalBedsPer1000Inhabitants\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8332872279423914`*^9, 3.8332872814486604`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"75a917ef-d841-433a-9f41-676525b29314"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJxF0XkwlGEABvBPKu3u9zFaf2y7jLZy5CqSpmy8r0LSmHGzTeXICkOOVoXJ
LUplUOPoYo1t1pEIs8p9VJrVbI4clVqN/XbXOROGyShN0/vMPPPM7++HHXTZ
I2QLhmGcP91c4yOOUqmTHO5n0oN4PE3g13JUFO8vhznT31tUhpqAFZu6Vh0p
h6kds8ZMGQHyxOa83BQ5HO7Loo+WEcAvdopGFMhhSfFmCNBwYcZYX4jc8dk/
cFyMHHiXqW00gOz14seajgx5NZiOVf9EtnK9nzS0g4Ruy3by9QgC6HUl6lSy
SOhfzJpWmhKAK4qYZliQcLghvJA5iwPTN7UH9BxI+LK1HFYu4KA2zqew34uE
zmE5anYHCdDj5R5NCSOhg8ahajM+AcyF3lmKJBKmJnfwohMIcCqnrTn2HgmX
jg/gKbYEWH6SEHBHQMJQrmUGZwUHPk6l+9ybSPjIXcKNb8bBabZWQGU/CVce
m6TbxuIgLzJ3+OFXEnYGr3FPWOAg2yWKx1kkIenl+3x8jgZ0uIKoyG0KWOG5
yGCJaMBjjZPvzFDA1zcYG8owGpDRvs13mSigI7u+cN2EBrZ7jPR8sFPAi9Js
e/E0FUwYWTZmuiugrGaGt1VIBSetJnUlIQrI+xsqwGoftDVeR44U1yc65yJH
rbLrwp8is98tbdg0IBtSB3MqepHbk9VvC8aQqZlFQtcZBexNavWwtqICsi3F
NhNTwnz1coHvLAVcy5YoQ+lK+KqJHkOtoYCz3XuHVAbKf39SgNRKYq12DHnV
cqKu/QxyYwinQisQuZsqlGJ85HT7eGbpTeRPz4rG+0qRv5TpN5XWIh/G695r
dyKzqwr8dg0jt49NYP1y5AXO1d34L+Qr2roJ81qq/xbxDeYT9yDHaaZNFNsg
z9mcmApwQV4v8A0Sn0M+H8RnNcQgx3SszHtnqODHrqLBSyUUwPCU2N4qUsE0
HzO3snIKiOZrCEKrVHAyDnN0E1HA6NsWzeQ2FczumxvZWU8BvwE8RsrZ
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$190080#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.1241376*^9, 3.2}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.1241376*^9, 3.2}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3124137600, 3723753600}, {3.2, 
                3.799999967773392}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJxF0XkwlGEABvBPKu3u9zFaf2y7jLZy5CqSpmy8r0LSmHGzTeXICkOOVoXJ
LUplUOPoYo1t1pEIs8p9VJrVbI4clVqN/XbXOROGyShN0/vMPPPM7++HHXTZ
I2QLhmGcP91c4yOOUqmTHO5n0oN4PE3g13JUFO8vhznT31tUhpqAFZu6Vh0p
h6kds8ZMGQHyxOa83BQ5HO7Loo+WEcAvdopGFMhhSfFmCNBwYcZYX4jc8dk/
cFyMHHiXqW00gOz14seajgx5NZiOVf9EtnK9nzS0g4Ruy3by9QgC6HUl6lSy
SOhfzJpWmhKAK4qYZliQcLghvJA5iwPTN7UH9BxI+LK1HFYu4KA2zqew34uE
zmE5anYHCdDj5R5NCSOhg8ahajM+AcyF3lmKJBKmJnfwohMIcCqnrTn2HgmX
jg/gKbYEWH6SEHBHQMJQrmUGZwUHPk6l+9ybSPjIXcKNb8bBabZWQGU/CVce
m6TbxuIgLzJ3+OFXEnYGr3FPWOAg2yWKx1kkIenl+3x8jgZ0uIKoyG0KWOG5
yGCJaMBjjZPvzFDA1zcYG8owGpDRvs13mSigI7u+cN2EBrZ7jPR8sFPAi9Js
e/E0FUwYWTZmuiugrGaGt1VIBSetJnUlIQrI+xsqwGoftDVeR44U1yc65yJH
rbLrwp8is98tbdg0IBtSB3MqepHbk9VvC8aQqZlFQtcZBexNavWwtqICsi3F
NhNTwnz1coHvLAVcy5YoQ+lK+KqJHkOtoYCz3XuHVAbKf39SgNRKYq12DHnV
cqKu/QxyYwinQisQuZsqlGJ85HT7eGbpTeRPz4rG+0qRv5TpN5XWIh/G695r
dyKzqwr8dg0jt49NYP1y5AXO1d34L+Qr2roJ81qq/xbxDeYT9yDHaaZNFNsg
z9mcmApwQV4v8A0Sn0M+H8RnNcQgx3SszHtnqODHrqLBSyUUwPCU2N4qUsE0
HzO3snIKiOZrCEKrVHAyDnN0E1HA6NsWzeQ2FczumxvZWU8BvwE8RsrZ
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$190080#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.1241376*^9, 3.2}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.1241376*^9, 3.2}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3124137600, 3723753600}, {3.2, 
                3.799999967773392}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[
  TimeSeries, {{{3.8, 3.7, 3.7, 3.7, 3.6, 3.7, 3.6, 3.5, 3.4, 3.3, 3.3, 3.3, 
    3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.21195}}, {
     TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
      2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
    "Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, True, 12.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.833287147058996*^9, {3.833287196793427*^9, 3.8332872092670097`*^9}, 
   3.833287284014345*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"abb87d75-a927-411c-aa18-0e32985546bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g1", " ", "=", " ", 
  RowBox[{"DateListPlot", "[", 
   RowBox[{"TotalBedsPer1000Kentucky", ",", " ", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<\[CapitalSHacek]tevilo Postelj na 1000 Prebivalcev v \
Kentucky-ju\>\""}], ",", " ", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Web\>\""}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.83328732316931*^9, 3.833287400576357*^9}, {
  3.833289164068021*^9, 3.8332891658530345`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"ed958554-7aa8-413f-bd85-f7bc73f0478b"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.790588, 0.201176, 0.], PointSize[0.012833333333333334`], 
     AbsoluteThickness[3], CapForm["Butt"], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQQXLro9dzQGA3YHIN/hR9NzxzQwYAPxH3jsR+EH
5P9GUX9gqvkLZHmDPcUo/As8G144zpoJAqxg843foPA3RGq8ROYrNKS8dIQ4
jQVs/oUFLx3PngEBMN/g+x0U+QWykq+g7mEG8QVcQlH4G6ZMROEr7D6Lwp/w
kPM1Mp+Bw+011P1MYPMjmlD4AvX7Xjt+OTSXW/kvkwMAUgVlLQ==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.1241376*^9, 2.2666666666666666`},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->{{
     StrokeForm[
      Opacity[0]], 
     StrokeForm[
      Opacity[0]]}, {Automatic, None}},
  FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{{{
       2.3, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"2.3\"", ShowStringCharacters -> False], 2.3, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {2.4, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"2.4\"", ShowStringCharacters -> False], 2.4, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {2.5, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"2.5\"", ShowStringCharacters -> False], 2.5, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {2.6, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"2.6\"", ShowStringCharacters -> False], 2.6, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {2.7, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"2.7\"", ShowStringCharacters -> False], 2.7, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {2.8, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"2.8\"", ShowStringCharacters -> False], 2.8, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {2.9, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"2.9\"", ShowStringCharacters -> False], 2.9, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}}, 
      None}, {{{2.9979072*^9, 
        FormBox[
         StyleBox["\"1995\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         StyleBox["\"2000\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         StyleBox["\"2005\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         StyleBox["\"2010\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         StyleBox["\"2015\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {2.9979072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0294432*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0610656*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0926016*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1241376*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.187296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.218832*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.250368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.281904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3450624*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3765984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4397568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{2.9979072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {2.9979072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0294432*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0610656*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0926016*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1241376*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.187296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.218832*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.250368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.281904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3450624*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3765984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4397568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->Large,
  Method->{
   "NoShowPlotTheme" -> "Web", "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"\[CapitalSHacek]tevilo Postelj na 1000 Prebivalcev v Kentucky-ju\"", 
    TraditionalForm],
  PlotRange->{{3.1241376*^9, 3.7237536*^9}, {2.2666666666666666`, 2.9}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Charting`FindScaledTicks[
     (Charting`SimpleTicks[#, #2, 6]& )[
      SlotSequence[1]], {Identity, Identity}]& }]], "Output",
 CellChangeTimes->{{3.8332873439391575`*^9, 3.8332873635728893`*^9}, 
   3.833287402938817*^9, 3.833289204766692*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"aeab45e2-c657-4a1a-8f19-459f945fb886"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Florioda", "Section",
 CellChangeTimes->{{3.833290300301607*^9, 
  3.8332903113883295`*^9}},ExpressionUUID->"fe9d899a-98fe-42f0-ba8b-\
820ad9b16210"],

Cell[BoxData[
 RowBox[{"Florida", " ", "=", " ", 
  RowBox[{"Select", "[", 
   RowBox[{"podatki", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "\"\<Location\>\"", "]"}], "==", " ", 
      NamespaceBox["LinguisticAssistant",
       DynamicModuleBox[{Typeset`query$$ = "Florida, United States", 
        Typeset`boxes$$ = TemplateBox[{"\"Florida, United States\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"AdministrativeDivision\"", ",", 
              RowBox[{"{", 
                RowBox[{"\"Florida\"", ",", "\"UnitedStates\""}], "}"}]}], 
            "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Florida\\\", \\\"UnitedStates\\\"}]\"", "\"administrative division\""}, 
         "Entity"], 
        Typeset`allassumptions$$ = {{
         "type" -> "Clash", "word" -> "Florida, United States", "template" -> 
          "Assuming \"Florida, United States\" is a US state${separator}Use \
as ${desc} instead", "count" -> "2", "pulldown" -> "false", "default" -> 
          "{\"C\", \"Florida, United States\"} -> {\"USState\", \"dflt\"}", 
          "Values" -> {{
            "name" -> "USState", "desc" -> "a US state", "input" -> 
             "{\"C\", \"Florida, United States\"} -> {\"USState\"}"}, {
            "name" -> "City", "desc" -> "a city", "input" -> 
             "{\"C\", \"Florida, United States\"} -> {\"City\"}"}}}}, 
        Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
        Typeset`querystate$$ = {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         1.4665064`7.617828956126976, "Messages" -> {}}}, 
        DynamicBox[ToBoxes[
          AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
           Dynamic[Typeset`query$$], 
           Dynamic[Typeset`boxes$$], 
           Dynamic[Typeset`allassumptions$$], 
           Dynamic[Typeset`assumptions$$], 
           Dynamic[Typeset`open$$], 
           Dynamic[Typeset`querystate$$]], StandardForm],
         ImageSizeCache->{321., {7., 17.}},
         TrackedSymbols:>{
          Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
           Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
        DynamicModuleValues:>{},
        UndoTrackedVariables:>{Typeset`open$$}],
       BaseStyle->{"Deploy"},
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True]}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8332891475853252`*^9, 3.8332891492977104`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"f32fb429-c8cc-4593-8f0c-113d80129ae3"],

Cell[CellGroupData[{

Cell[BoxData[{
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Florida", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.5, 0.5, 0.5, 0.5, 0.5, 0.4, 0.2, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5, 0.5, 0.5, 0.4, 0.4, 0.4, 0.4, 0.413852}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.6, 1.6, 1.6, 1.5, 1.5, 1.4, 1.5, 1.4, 1.3, 1.4, 1.4,
            1.3, 1.3, 1.3, 1.3, 1.3, 1.2, 1.2, 1.3, 1.263444}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            1.2, 1.1, 1.1, 1.1, 1., 1., 1., 1., 1., 0.9, 1., 1., 1., 1., 1., 
             1., 0.9, 1, 0.9, 0.899582}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.3, 3.2, 3.2, 3.1, 3., 2.9, 2.9, 2.8, 2.8, 2.9, 2.9, 
           2.8, 2.8, 2.8, 2.7, 2.7, 2.6, 2.6, 2.6, 2.576877}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]]}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Location"} -> 
        1, {All, "StateOrLocalGovernmentBedsPer1000Inhabitants"} -> 
        1, {All, "NonProfitBedsPer1000Inhabitants"} -> 
        1, {All, "ForProfitBedsPer1000Inhabitants"} -> 
        1, {All, "TotalBedsPer1000Inhabitants"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Location" -> TypeSystem`PackageScope`AtomShape[150], 
            "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "NonProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "ForProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "TotalBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160]]], 
          DirectedInfinity[1], 5, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Location", "StateOrLocalGovernmentBedsPer1000Inhabitants", 
         "NonProfitBedsPer1000Inhabitants", "ForProfitBedsPer1000Inhabitants",
          "TotalBedsPer1000Inhabitants"}, {
         TypeSystem`Atom[
          Entity["AdministrativeDivision"]], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData]}], 1], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Location"} -> 
        1, {All, "StateOrLocalGovernmentBedsPer1000Inhabitants"} -> 
        1, {All, "NonProfitBedsPer1000Inhabitants"} -> 
        1, {All, "ForProfitBedsPer1000Inhabitants"} -> 
        1, {All, "TotalBedsPer1000Inhabitants"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Location" -> TypeSystem`PackageScope`AtomShape[150], 
            "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "NonProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "ForProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "TotalBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160]]], 
          DirectedInfinity[1], 5, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Location", "StateOrLocalGovernmentBedsPer1000Inhabitants", 
         "NonProfitBedsPer1000Inhabitants", "ForProfitBedsPer1000Inhabitants",
          "TotalBedsPer1000Inhabitants"}, {
         TypeSystem`Atom[
          Entity["AdministrativeDivision"]], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData]}], 1], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 
     5, "DataRowCount" -> 1, "DataColumnCount" -> 5, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Location", 
                  Style[
                  "Location", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Location"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Location"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StateOrLocalGovernmentBedsPer1000Inhabitants", 
                  Style[
                  "StateOrLocalGovernmentBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "StateOrLocalGovernmentBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "StateOrLocalGovernmentBedsPer1000Inhabitants"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["NonProfitBedsPer1000Inhabitants", 
                  Style[
                  "NonProfitBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "NonProfitBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "NonProfitBedsPer1000Inhabitants"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ForProfitBedsPer1000Inhabitants", 
                  Style[
                  "ForProfitBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ForProfitBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ForProfitBedsPer1000Inhabitants"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TotalBedsPer1000Inhabitants", 
                  Style[
                  "TotalBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TotalBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TotalBedsPer1000Inhabitants"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Florida, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1283., {51., 57.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1283., {51., 57.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False], "\[IndentingNewLine]", 
 RowBox[{"TotalBedsPer1000Florida", " ", "=", " ", 
  RowBox[{
   RowBox[{"%", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   "\"\<TotalBedsPer1000Inhabitants\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"g2", ",", "g1", ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8332893244739504`*^9, 3.8332893254149537`*^9}, {
  3.8332893629731393`*^9, 3.83328943906658*^9}, {3.83328959076225*^9, 
  3.8332895914973073`*^9}, {3.83328967371356*^9, 3.8332896867623415`*^9}, {
  3.8332900391627398`*^9, 3.833290064087124*^9}, {3.833290113357853*^9, 
  3.833290119479778*^9}, {3.8332901540823264`*^9, 3.8332901592887373`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"f9252d9e-db89-45ab-b1a7-d783432af4a1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Location" -> 
        Entity["AdministrativeDivision", {"Florida", "UnitedStates"}], 
        "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{0.5, 0.5, 0.5, 0.5, 0.5, 0.4, 0.2, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5, 0.5, 0.5, 0.4, 0.4, 0.4, 0.4, 0.413852}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "NonProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{1.6, 1.6, 1.6, 1.5, 1.5, 1.4, 1.5, 1.4, 1.3, 1.4, 1.4,
            1.3, 1.3, 1.3, 1.3, 1.3, 1.2, 1.2, 1.3, 1.263444}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "ForProfitBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{
            1.2, 1.1, 1.1, 1.1, 1., 1., 1., 1., 1., 0.9, 1., 1., 1., 1., 1., 
             1., 0.9, 1, 0.9, 0.899582}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1], 
        "TotalBedsPer1000Inhabitants" -> 
        TemporalData[
         TimeSeries, {{{3.3, 3.2, 3.2, 3.1, 3., 2.9, 2.9, 2.8, 2.8, 2.9, 2.9, 
           2.8, 2.8, 2.8, 2.7, 2.7, 2.6, 2.6, 2.6, 2.576877}}, {
            
            TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
             2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            ValueDimensions -> 1}}, True, 12.1]]}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Location"} -> 
        1, {All, "StateOrLocalGovernmentBedsPer1000Inhabitants"} -> 
        1, {All, "NonProfitBedsPer1000Inhabitants"} -> 
        1, {All, "ForProfitBedsPer1000Inhabitants"} -> 
        1, {All, "TotalBedsPer1000Inhabitants"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Location" -> TypeSystem`PackageScope`AtomShape[150], 
            "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "NonProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "ForProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "TotalBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160]]], 
          DirectedInfinity[1], 5, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Location", "StateOrLocalGovernmentBedsPer1000Inhabitants", 
         "NonProfitBedsPer1000Inhabitants", "ForProfitBedsPer1000Inhabitants",
          "TotalBedsPer1000Inhabitants"}, {
         TypeSystem`Atom[
          Entity["AdministrativeDivision"]], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData]}], 1], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Location"} -> 
        1, {All, "StateOrLocalGovernmentBedsPer1000Inhabitants"} -> 
        1, {All, "NonProfitBedsPer1000Inhabitants"} -> 
        1, {All, "ForProfitBedsPer1000Inhabitants"} -> 
        1, {All, "TotalBedsPer1000Inhabitants"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Location" -> TypeSystem`PackageScope`AtomShape[150], 
            "StateOrLocalGovernmentBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "NonProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "ForProfitBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160], 
            "TotalBedsPer1000Inhabitants" -> 
            TypeSystem`PackageScope`AtomShape[160]]], 
          DirectedInfinity[1], 5, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Location", "StateOrLocalGovernmentBedsPer1000Inhabitants", 
         "NonProfitBedsPer1000Inhabitants", "ForProfitBedsPer1000Inhabitants",
          "TotalBedsPer1000Inhabitants"}, {
         TypeSystem`Atom[
          Entity["AdministrativeDivision"]], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData], 
         TypeSystem`Atom[TemporalData]}], 1], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 
     5, "DataRowCount" -> 1, "DataColumnCount" -> 5, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Location", 
                  Style[
                  "Location", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Location"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Location"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StateOrLocalGovernmentBedsPer1000Inhabitants", 
                  Style[
                  "StateOrLocalGovernmentBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "StateOrLocalGovernmentBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "StateOrLocalGovernmentBedsPer1000Inhabitants"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["NonProfitBedsPer1000Inhabitants", 
                  Style[
                  "NonProfitBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "NonProfitBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "NonProfitBedsPer1000Inhabitants"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ForProfitBedsPer1000Inhabitants", 
                  Style[
                  "ForProfitBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ForProfitBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ForProfitBedsPer1000Inhabitants"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TotalBedsPer1000Inhabitants", 
                  Style[
                  "TotalBedsPer1000Inhabitants", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TotalBedsPer1000Inhabitants"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TotalBedsPer1000Inhabitants"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Florida, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StateOrLocalGovernmentBedsPer1000Inhabitants"]}, "Item",
                 False], "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["NonProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ForProfitBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TotalBedsPer1000Inhabitants"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1264., {52., 58.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1264., {52., 58.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.833289327582062*^9, 3.8332893763262925`*^9, {3.833289415730687*^9, 
   3.8332894414195347`*^9}, 3.8332895931798887`*^9, 3.833289688466964*^9, 
   3.833290073652169*^9, 3.833290122863777*^9, 3.833290160938065*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"84598f3f-ab61-4cbc-8347-6f4799853fcc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJxF0n1MzHEcwPGju989FGk16pI6Dz1OVpSpG5+Ph8jTVtKT6VHXYqUHKbIp
lFISlZUyEiLtpJTubD0oopyWRCqkrN/DRZiHdRgy6/vePvvs9d/nj48sbK93
xHQejyf/O5Pbdvm67m4PGu2kxmEKhQT81Ssq9wfQmDX6Vq21loB5fJquKprG
tOb3ttJhMeSpFityUmnsfZBh3FcmBv/4Ef0Z+TSeK55MDLXBY7aWFcTNgwGh
/Sri0Fypkc0TGn8ZZLvpFGLwufVOZzJMo9pzloPlAjFMhBvzqr7Q2FMzv6hn
RATOmwoPPRMxmGYXL3W6IAKLeykmV80ZzHm81WxesAgCK/eMmjoyKKLPt2+x
EoFDu3KJxWoGzQzts60HhaBM8C3o8GEwI3xNZ26pENp8vGLFUQxm3y+2uugn
hMUV2zPYQwwu/ZcQNmQ13ok/RfztwsGQk+XEvh4lC73qGdRrWNoyaCGEjTLD
kKsdDO4UnGbL+ijIi87pLX3NoE1HSMv1AgoyPWMU8k8MKv5FgUlgeUy0gJ2y
t05+Zr0p8bD+0Pg9exZ9kml+aQwFlPfztq6VLLo8nBU4VEPBgI1TXboXi3e0
Vc6FnylY6/xmriaCnbqPpzzbWHeAOFpVk7I+hzhmQla9+yKx7NHX3661LO5L
mqc8+YUCa0lP1uX7LDbU//DrqqOg6bBedvlLFvP0Zs9Rx1EgSS+q2DRG7mUa
U93TedyUkzM1XKQx8Y7WBc+0i4i7nTXLprkRTzgNVDdtJq6LkF82DOVQ3p4Q
HrCSglZJRTcvkcPr6he3L+kEcHTVfmnJcQ5Tzjp6J98VwItrRf0PSrj//yWA
V2WW9SVKYheD6k6jFmLZjXx/s14Ox/zbg46mCqDp5QCvg+bQMVCVNgQC+ChP
sjL4yaEoilGN/uDDPqO5B8cNtah5PBkfKhMXjafMJ06YeWSg2JX4g+uakRBP
4l/5fmGqncRBYYnmtXHEcc3fx7cf0+KuE/ZP3Tv5YLpN436iSIs3W7pqtt3l
Q2yisDzyhhbtzygzD1Txoe+heubhRi1eyfW4FXeeD38A9Ym7Iw==
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$225591#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.1241376*^9, 2.5768770074517584`}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.1241376*^9, 2.5768770074517584`}, 
              DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3124137600, 3723753600}, {2.5768770074517584`, 
                3.299999967773392}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJxF0n1MzHEcwPGju989FGk16pI6Dz1OVpSpG5+Ph8jTVtKT6VHXYqUHKbIp
lFISlZUyEiLtpJTubD0oopyWRCqkrN/DRZiHdRgy6/vePvvs9d/nj48sbK93
xHQejyf/O5Pbdvm67m4PGu2kxmEKhQT81Ssq9wfQmDX6Vq21loB5fJquKprG
tOb3ttJhMeSpFityUmnsfZBh3FcmBv/4Ef0Z+TSeK55MDLXBY7aWFcTNgwGh
/Sri0Fypkc0TGn8ZZLvpFGLwufVOZzJMo9pzloPlAjFMhBvzqr7Q2FMzv6hn
RATOmwoPPRMxmGYXL3W6IAKLeykmV80ZzHm81WxesAgCK/eMmjoyKKLPt2+x
EoFDu3KJxWoGzQzts60HhaBM8C3o8GEwI3xNZ26pENp8vGLFUQxm3y+2uugn
hMUV2zPYQwwu/ZcQNmQ13ok/RfztwsGQk+XEvh4lC73qGdRrWNoyaCGEjTLD
kKsdDO4UnGbL+ijIi87pLX3NoE1HSMv1AgoyPWMU8k8MKv5FgUlgeUy0gJ2y
t05+Zr0p8bD+0Pg9exZ9kml+aQwFlPfztq6VLLo8nBU4VEPBgI1TXboXi3e0
Vc6FnylY6/xmriaCnbqPpzzbWHeAOFpVk7I+hzhmQla9+yKx7NHX3661LO5L
mqc8+YUCa0lP1uX7LDbU//DrqqOg6bBedvlLFvP0Zs9Rx1EgSS+q2DRG7mUa
U93TedyUkzM1XKQx8Y7WBc+0i4i7nTXLprkRTzgNVDdtJq6LkF82DOVQ3p4Q
HrCSglZJRTcvkcPr6he3L+kEcHTVfmnJcQ5Tzjp6J98VwItrRf0PSrj//yWA
V2WW9SVKYheD6k6jFmLZjXx/s14Ox/zbg46mCqDp5QCvg+bQMVCVNgQC+ChP
sjL4yaEoilGN/uDDPqO5B8cNtah5PBkfKhMXjafMJ06YeWSg2JX4g+uakRBP
4l/5fmGqncRBYYnmtXHEcc3fx7cf0+KuE/ZP3Tv5YLpN436iSIs3W7pqtt3l
Q2yisDzyhhbtzygzD1Txoe+heubhRi1eyfW4FXeeD38A9Ym7Iw==
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$225591#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.1241376*^9, 2.5768770074517584`}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.1241376*^9, 2.5768770074517584`}, 
              DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3124137600, 3723753600}, {2.5768770074517584`, 
                3.299999967773392}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2018\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[
  TimeSeries, {{{3.3, 3.2, 3.2, 3.1, 3., 2.9, 2.9, 2.8, 2.8, 2.9, 2.9, 2.8, 
    2.8, 2.8, 2.7, 2.7, 2.6, 2.6, 2.6, 2.576877}}, {
     TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
      2018, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
    "Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, True, 12.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.833289327582062*^9, 3.8332893763262925`*^9, {3.833289415730687*^9, 
   3.8332894414195347`*^9}, 3.8332895931798887`*^9, 3.833289688466964*^9, 
   3.833290073652169*^9, 3.833290122863777*^9, 3.833290161200946*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"91ef0843-5db2-40d1-847c-d97a2ef125ba"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.790588, 0.201176, 0.], PointSize[0.012833333333333334`], 
      AbsoluteThickness[3], CapForm["Butt"], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQQXLro9d0wDAy4HIN/hR9Nzx1kzQYATxH/gsR+F
H5D/+7nj2TMgwAHiH5hq/sIRYhSYb7Cn+IWjMRiwg/gXeDag8B2M37yA2scG
4m+I1HiJzFdoSHmJrP7AhQUofIPvd1DUL5CVfIXMF3AJReFvmDLxFdT9rGDz
d59F4U94yPka6h8WB7Av3FD4CyKaUPgC9fteO3q2uG0onMviAAC/hnMG
       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0.790588, 0.201176, 0.], PointSize[0.012833333333333334`], 
      AbsoluteThickness[3], CapForm["Butt"], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQQXLro9dzQGA3YHIN/hR9NzxzQwYAPxH3jsR+EH
5P9GUX9gqvkLZHmDPcUo/As8G144zpoJAqxg843foPA3RGq8ROYrNKS8dIQ4
jQVs/oUFLx3PngEBMN/g+x0U+QWykq+g7mEG8QVcQlH4G6ZMROEr7D6Lwp/w
kPM1Mp+Bw+011P1MYPMjmlD4AvX7Xjt+OTSXW/kvkwMAUgVlLQ==
       "]]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.1241376*^9, 2.5367035000000007`},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->{{
     StrokeForm[
      Opacity[0]], 
     StrokeForm[
      Opacity[0]]}, {Automatic, None}},
  FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{{{
       2.4, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"2.4\"", ShowStringCharacters -> False], 2.4, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {2.6, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"2.6\"", ShowStringCharacters -> False], 2.6, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {2.8, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"2.8\"", ShowStringCharacters -> False], 2.8, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {3., 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"3.0\"", ShowStringCharacters -> False], 3., AutoDelete -> 
           True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {3.2, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"3.2\"", ShowStringCharacters -> False], 3.2, 
           AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}}, 
      None}, {{{2.9979072*^9, 
        FormBox[
         StyleBox["\"1995\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         StyleBox["\"2000\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         StyleBox["\"2005\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         StyleBox["\"2010\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         StyleBox["\"2015\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {2.9979072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0294432*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0610656*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0926016*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1241376*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.187296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.218832*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.250368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.281904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3450624*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3765984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4397568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{2.9979072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {2.9979072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0294432*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0610656*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.0926016*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1241376*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.187296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.218832*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.250368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.281904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3450624*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.3765984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4081344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4397568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5028288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->Large,
  Method->{
   "NoShowPlotTheme" -> "Web", "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Charting`FindScaledTicks[
     (Charting`SimpleTicks[#, #2, 6]& )[
      SlotSequence[1]], {Identity, Identity}]& }]], "Output",
 CellChangeTimes->{
  3.833289327582062*^9, 3.8332893763262925`*^9, {3.833289415730687*^9, 
   3.8332894414195347`*^9}, 3.8332895931798887`*^9, 3.833289688466964*^9, 
   3.833290073652169*^9, 3.833290122863777*^9, 3.833290161233952*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"46ac912d-903c-4566-b22d-cd2321db27a5"]
}, Open  ]],

Cell["\<\
Graf prikazuje Skupno \[SHacek]tevilo postelj v zdravstvu na 1000 Prebivalcev \
v Kentuckyju in Floridi.\
\>", "Text",
 CellChangeTimes->{{3.8332901809749722`*^9, 3.833290232262116*^9}, 
   3.833290335154934*^9},ExpressionUUID->"d4428fcb-c75d-4848-99df-\
a60361f0e09b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1600, 817},
WindowMargins->{{1272, Automatic}, {Automatic, -8}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"91cb37a9-4fc3-4883-b69a-e7c1a9b814e9"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 337, 8, 156, "Title",ExpressionUUID->"7479c9cc-bcda-4a48-98d6-5c4321133a36"],
Cell[CellGroupData[{
Cell[942, 34, 276, 4, 99, "Chapter",ExpressionUUID->"7c32a07e-06d7-4dfa-b06e-324960a660c5"],
Cell[1221, 40, 189, 3, 34, "Text",ExpressionUUID->"e767bf09-80e5-4d40-912d-5e894bd4969d"],
Cell[CellGroupData[{
Cell[1435, 47, 285, 5, 28, "Input",ExpressionUUID->"a95a2a95-9f20-4e4c-9237-cefe44c2a42b"],
Cell[1723, 54, 377614, 7366, 1099, "Output",ExpressionUUID->"ab5c041d-e96f-40ec-bcbb-e13a1ee127c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379374, 7425, 229, 4, 67, "Section",ExpressionUUID->"534ff094-e7fe-4a6f-839b-cf95f94c3ae2"],
Cell[379606, 7431, 195, 3, 34, "Text",ExpressionUUID->"21196fdc-b8eb-4fe5-9870-f99307af45ed"],
Cell[379804, 7436, 152, 3, 28, "Input",ExpressionUUID->"b47a1afc-83a8-404f-b23f-332862ba06d0"],
Cell[CellGroupData[{
Cell[379981, 7443, 2957, 58, 62, "Input",ExpressionUUID->"ac35d277-e767-4ea6-b079-a15cd395b9bd"],
Cell[382941, 7503, 44429, 812, 129, "Output",ExpressionUUID->"3f91f358-586a-48c5-847f-53b8136a0c88"]
}, Open  ]],
Cell[427385, 8318, 152, 3, 28, "Input",ExpressionUUID->"3413b156-c8f7-4128-8a50-dc35b8489edb"],
Cell[427540, 8323, 353, 7, 28, "Input",ExpressionUUID->"30a301f1-99ec-49b2-a903-8d7270a3b977"],
Cell[CellGroupData[{
Cell[427918, 8334, 14178, 287, 58, "Input",ExpressionUUID->"8b7f07c2-0e29-4dd1-8d40-ac7fda86ba38"],
Cell[442099, 8623, 295, 6, 32, "Output",ExpressionUUID->"18e6fe83-58b4-4ce0-99b7-719f2b5add79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442431, 8634, 595, 11, 28, "Input",ExpressionUUID->"624b7cce-7ab4-4883-8578-889897f83102"],
Cell[443029, 8647, 14963, 385, 390, "Output",ExpressionUUID->"dfcfbf96-d175-4d43-b2d5-a5d2dac9d154"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458029, 9037, 616, 12, 28, "Input",ExpressionUUID->"79287a14-4c99-4406-83dc-7c3053ce5858"],
Cell[458648, 9051, 15067, 387, 390, "Output",ExpressionUUID->"82074a0f-84e0-4f03-aa58-c396bff8c841"]
}, Open  ]],
Cell[473730, 9441, 179, 3, 28, "Input",ExpressionUUID->"9c389246-8eef-4c00-a9b7-3a010b6cca09"],
Cell[473912, 9446, 156, 3, 28, "Input",ExpressionUUID->"f6832e4c-ff2b-44c8-a50b-bd34c25e2baa"],
Cell[474071, 9451, 154, 3, 28, "Input",ExpressionUUID->"cb9273ed-8b24-43a1-ac9d-b5cb396b400a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474262, 9459, 152, 3, 67, "Section",ExpressionUUID->"4bc50fa1-b340-428e-933b-fea4457f992c"],
Cell[474417, 9464, 3522, 87, 119, "Input",ExpressionUUID->"1d2a217e-26f0-4a7c-8038-c559914d84da"],
Cell[CellGroupData[{
Cell[477964, 9555, 44664, 817, 154, "Input",ExpressionUUID->"75a917ef-d841-433a-9f41-676525b29314"],
Cell[522631, 10374, 14240, 287, 62, "Output",ExpressionUUID->"abb87d75-a927-411c-aa18-0e32985546bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[536908, 10666, 595, 13, 28, "Input",ExpressionUUID->"ed958554-7aa8-413f-bd85-f7bc73f0478b"],
Cell[537506, 10681, 15554, 399, 393, "Output",ExpressionUUID->"aeab45e2-c657-4a1a-8f19-459f945fb886"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[553109, 11086, 155, 3, 67, "Section",ExpressionUUID->"fe9d899a-98fe-42f0-ba8b-820ad9b16210"],
Cell[553267, 11091, 2555, 51, 41, "Input",ExpressionUUID->"f32fb429-c8cc-4593-8f0c-113d80129ae3"],
Cell[CellGroupData[{
Cell[555847, 11146, 45102, 826, 173, "Input",ExpressionUUID->"f9252d9e-db89-45ab-b1a7-d783432af4a1"],
Cell[600952, 11974, 44631, 817, 129, "Output",ExpressionUUID->"84598f3f-ab61-4cbc-8347-6f4799853fcc"],
Cell[645586, 12793, 14602, 293, 62, "Output",ExpressionUUID->"91ef0843-5db2-40d1-847c-d97a2ef125ba"],
Cell[660191, 13088, 15410, 393, 378, "Output",ExpressionUUID->"46ac912d-903c-4566-b22d-cd2321db27a5"]
}, Open  ]],
Cell[675616, 13484, 279, 6, 34, "Text",ExpressionUUID->"d4428fcb-c75d-4848-99df-a60361f0e09b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

